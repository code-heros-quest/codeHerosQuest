[{"/Users/michaeleclavea/Desktop/codeFellow/testSpace/gametest/src/index.js":"1","/Users/michaeleclavea/Desktop/codeFellow/testSpace/gametest/src/App.js":"2","/Users/michaeleclavea/Desktop/codeFellow/testSpace/gametest/src/Loot.js":"3","/Users/michaeleclavea/Desktop/codeFellow/testSpace/gametest/src/Chat.js":"4","/Users/michaeleclavea/Desktop/codeFellow/testSpace/gametest/src/Scenes.js":"5","/Users/michaeleclavea/Desktop/codeFellow/code401/testSpace/gametest/src/index.js":"6","/Users/michaeleclavea/Desktop/codeFellow/code401/testSpace/gametest/src/App.js":"7","/Users/michaeleclavea/Desktop/codeFellow/code401/testSpace/gametest/src/Chat.js":"8","/Users/michaeleclavea/Desktop/codeFellow/code401/testSpace/gametest/src/Loot.js":"9","/Users/michaeleclavea/Desktop/codeFellow/code401/testSpace/gametest/src/Scenes.js":"10","/Users/michaeleclavea/Desktop/codeFellow/code401/testSpace/gametest/src/SceneVideo.js":"11"},{"size":500,"mtime":1608079863940,"results":"12","hashOfConfig":"13"},{"size":2245,"mtime":1608152525594,"results":"14","hashOfConfig":"13"},{"size":1872,"mtime":1608081305375,"results":"15","hashOfConfig":"13"},{"size":2870,"mtime":1608144993592,"results":"16","hashOfConfig":"13"},{"size":1682,"mtime":1608150530238,"results":"17","hashOfConfig":"13"},{"size":222,"mtime":1608189705066,"results":"18","hashOfConfig":"19"},{"size":2101,"mtime":1608189705062,"results":"20","hashOfConfig":"19"},{"size":3385,"mtime":1608189705062,"results":"21","hashOfConfig":"19"},{"size":1588,"mtime":1608189705063,"results":"22","hashOfConfig":"19"},{"size":1574,"mtime":1608189705064,"results":"23","hashOfConfig":"19"},{"size":1200,"mtime":1608189705064,"results":"24","hashOfConfig":"19"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"wxvrgx",{"filePath":"28","messages":"29","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"27"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"27"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"110ay80",{"filePath":"43","messages":"44","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"58"},"/Users/michaeleclavea/Desktop/codeFellow/testSpace/gametest/src/index.js",[],["59","60"],"/Users/michaeleclavea/Desktop/codeFellow/testSpace/gametest/src/App.js",["61","62","63","64"],"\nimport './App.css';\nimport React, {useState, useEffect} from 'react';\nimport Loot from './Loot.js';\nimport Chat from './Chat.js';\nimport Scenes from './Scenes.js';\nimport { io, Socket } from 'socket.io-client';\n\nconst client = io.connect('http://localhost:3001', {transports: ['websocket']});\nclient.on('connect', () => {\n  console.log('connected');\n});\n\nlet count = 0; \nlet sceneCount = 1;\n\n\n\nfunction App() {\n  const welcome = <h1 style={{ color: 'gray'}}>Welcome to Code Quest. Press the next scene to start the game. Good luck on your journey.</h1>\n  // const intro = <video autoPlay src='./Videos/CodeQuestIntro.mp4' placeholder=\"./images/axe.png\" style={{ width: '100%', height: '700px'}} ></video>\n  const [scene, setScene] = useState(welcome);\n\n\n  function emitReady(){\n    sceneCount++;\n    client.emit('ready', sceneCount);\n    alert('ready');\n  }\n\n  // function changeScene(){\n\n  //   if(count === 0){\n  //     count++;\n  //     let title = Scenarios.intro.name;\n  //     let intro = Scenarios.intro.dialogue;\n  //     return setScene(intro)\n  //   }\n  //   if(count === 1){\n  //     const scene1 = <video controls autoPlay src='./Videos/scene1.mp4' style={{ width: '100%', height: 'auto'}} ></video>\n  //     count++;\n  //    return setScene(scene1);\n  //   }\n  //   if(count === 2){\n  //     const scene2 = <video autoPlay src='./Videos/swamp.mp4' style={{ width: '100%', height: 'auto'}} ></video>\n  //     count++;\n  //     return setScene(scene2);\n  //   }\n  // }\n\n  \n\n  return (\n    <>\n        <section style={{ display:'grid', gridTemplateColumns: '4fr 1fr'}}>\n        <div id='sceneWindow' style={{ backgroundColor: 'black', width: '1250px', height: '700px', margin: 'auto', alignSelf: 'center'}}>\n        <div style={{ display: 'inline-block'}}>\n        {scene}\n        </div>\n        </div>\n        <Loot/>\n        </section>\n      <button  onClick={emitReady} style={{ display: 'block', margin: 'auto', marginTop: '10px'}} name=\"ready\">Next Scene</button>\n      <div style={{display: 'inline-block', margin: 'auto', marginLeft: '400px'}}>\n      <Scenes/>\n\n      </div>\n        <div style={{display: 'inline-block', margin: 'auto', marginLeft: '400px'}}>\n       <Chat/>\n\n        </div>\n\n    </>\n  );\n}\n\nexport default App;\n","/Users/michaeleclavea/Desktop/codeFellow/testSpace/gametest/src/Loot.js",["65","66","67","68","69","70","71","72","73"],"import React from 'react';\n\n\n\nfunction Loot(){\n\n    const styleLoot = {\n        borderRadius: '7px', \n        display: 'flex', \n        alignItems: 'center', \n        justifyContent: 'center'\n    }\n\n    const styleImg = {\n        height: '80px',\n        width: 'auto' \n    }\n\n\n\n    return(\n        <div id='loot-container'>\n        <section style={{ backgroundImage: 'url(./images/Loot.png)', backgroundSize: '100% 100%', padding: '2px 20px 2px 20px', height: '500px', width: '250px', margin: 'auto', backgroundRepeat: 'no-repeat', borderRadius: '7px', display: 'grid', gridTemplateColumns: '1fr 1fr', gridTemplateRows: '1fr 1fr 1fr 1fr', border: '1px solid black', backgroundColor: 'gray'}}>\n        <div style={styleLoot}><img style={styleImg} src='./images/icons/axe.png'></img></div>\n        <div style={styleLoot}><img style={styleImg} src='./images/icons/book.png'></img></div>\n        <div style={styleLoot}><img style={styleImg} src='./images/icons/gold.png'></img></div>\n        <div style={styleLoot}><img style={styleImg} src='./images/icons/potion.png'></img></div>\n        <div style={styleLoot}><img style={styleImg} src='./images/icons/sword.png'></img></div>\n        <div style={styleLoot}><img style={styleImg} src='./images/icons/dagger.png'></img></div>\n        <div style={styleLoot}><img style={styleImg} src='./images/icons/club.png'></img></div>\n        <div style={styleLoot}><img style={styleImg} src='./images/icons/bow.png'></img></div>        \n        </section>\n        </div>\n    )\n}\n\nexport default Loot;\n\n\n{/* <ul style={{ listStyle: 'none', margin: 'auto', padding: '0'}}>\n                <img src='./images/axe.png' style={{ height: '75px'}}></img>\n            </ul> */}\n\n            // <div style={{ borderRadius: '7px', display: 'flex', alignItems: 'center', justifyContent: 'center', border: '7px solid rgb(29.8, 29.8, 29.8)'}}>8</div>","/Users/michaeleclavea/Desktop/codeFellow/testSpace/gametest/src/Chat.js",[],"/Users/michaeleclavea/Desktop/codeFellow/testSpace/gametest/src/Scenes.js",["74"],"import React, { useState, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nconst client = io.connect('http://localhost:3001', {transports: ['websocket']});\nclient.on('connect', () => {\n  console.log('connected');\n});\n\nconst Scenes = () => {\n  const [scene, setScene] = useState([]);\n\n  \n    client.on('scenario', (scenario) => {\n      setScene([...scene, { name: scenario.name, message: scenario.dialogue }])\n      switch(scenario.type) {\n        case 'roll':\n          // code block\n          break;\n        case 'choice2':\n          // code block\n          break;\n        case 'choice3':\n          // code block\n          break;\n        case 'choice4':\n          // code block\n          break;\n        case 'riddle':\n          // code block\n          break;\n        case 'ready':\n\n          // code block\n          break;\n        case 'luck':\n          // code block\n          break;\n        default:\n          // code block\n      }\n    });\n\n    \n\n  const renderScene = () => {\n    return scene.map(({ name, message }, index) => (\n      <div key={index}>\n        <h3 style={{display: 'block', textAlign: 'center', textDecoration: 'underline'}}>\n          {name}\n        </h3>\n        <span style={{ width: '650px', height: 'auto'}}>{message}</span>\n      </div>\n    ))\n  }\n\n\n  return (\n\n      <div id=\"chat-window\" style={{ backgroundColor: 'lightgray', borderRadius: '10px', fontSize: '1.7em', color: 'black', display: 'inline-block', width: '750px', minHeight: '500px', height: 'auto', border: '6px solid black', padding: '5px 10px 10px 10px'}}>\n        {renderScene()}\n      </div>\n\n  )\n}\n\nexport default Scenes;",["75","76"],"/Users/michaeleclavea/Desktop/codeFellow/code401/testSpace/gametest/src/index.js",[],["77","78"],"/Users/michaeleclavea/Desktop/codeFellow/code401/testSpace/gametest/src/App.js",["79","80","81","82","83","84"],"\nimport './App.css';\nimport React, {useState, useEffect} from 'react';\nimport Loot from './Loot.js';\nimport Chat from './Chat.js';\nimport Scenes from './Scenes.js';\nimport SceneVideo from './SceneVideo.js';\nimport { io, Socket } from 'socket.io-client';\nimport { left } from 'inquirer/lib/utils/readline';\n\nconst client = io.connect('http://localhost:3001', {transports: ['websocket']});\nclient.on('connect', () => {\n  console.log('connected');\n});\n\nlet count = 0; \nlet sceneCount = 0;\n\n\n\nfunction App() {\n  const welcome = <h1 style={{ color: 'gray'}}>Click next to start the game!</h1>\n  const [scene, setScene] = useState(welcome);\n\n  client.on('scenario', (scenario) => {\n    setScene([{ video: scenario.video }])\n    switch(scenario.type) {\n      case 'roll':\n        // code block\n        break;\n      case 'choice2':\n        // code block\n        break;\n      case 'choice3':\n        // code block\n        break;\n      case 'choice4':\n        // code block\n        break;\n      case 'riddle':\n        // code block\n        break;\n      case 'ready':\n\n        // code block\n        break;\n      case 'luck':\n        // code block\n        break;\n      default:\n        // code block\n    }\n  });\n\n  function emitReady(){\n    sceneCount++;\n    client.emit('ready', sceneCount);\n    alert('ready');\n  }\n\n  \n\n  return (\n    <>\n      <div style={{ display: 'block', display:'grid', gridTemplateColumns: '1fr', marginTop: '160px', width: '100%'}}>\n      <div id='sceneWindow' style={{ display: 'inline-block', backgroundColor: 'white', width: '1250px', height: '700px', margin: 'auto'}}>\n      <SceneVideo client={client}/>\n      <Loot />\n      </div>\n      </div>\n      <button  onClick={emitReady} style={{ display: 'block', margin: 'auto', marginTop: '10px'}} name=\"ready\">Next Scene</button>\n      \n      <div style={{display: 'inline-block', margin: 'auto', marginLeft: '400px'}}>\n      <Scenes client={client}/>\n      </div>\n       \n      <div style={{display: 'inline-block', margin: 'auto', marginLeft: '400px'}}>\n      <Chat client={client}/>\n      </div>\n\n    </>\n  );\n}\n\nexport default App;\n","/Users/michaeleclavea/Desktop/codeFellow/code401/testSpace/gametest/src/Chat.js",["85","86"],"import React, { useState, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button';\n\n\n\nconst Chat = (props) => {\n  const client = props.client;\n  const [state, setState] = useState({message: '', name: ''});\n  const [chat, setChat] = useState([]);\n\n\n  useEffect(() => {\n    client.on('chat', ({name, message}) => {\n      setChat([...chat, { name, message }])\n    })\n    \n    client.on('result', payload => {\n      setChat([...payload, { name: payload.name, message: payload.dialogue }])\n      // do ready check, serve payload.num\n    })\n  })\n\n  const onTextChange = e => {\n    setState({...state, [e.target.name]: e.target.value})\n  }\n\n  const onMessageSubmit = (e) => {\n    e.preventDefault();\n    const { message, name } = state;\n    console.log(name, message);\n    client.emit('chat', {name, message});\n    setState({ message: '', name });\n  }\n\n  const renderChat = () => {\n    return chat.map(({ name, message }, index) => (\n      <div key={index}>\n        <h3 style={{fontSize: '1.6em'}}>\n        <strong>{name}:</strong> <span>{message}</span>\n        </h3>\n        <p style={{fontSize: '10px'}}>_____________________________________</p>\n      </div>\n    ))\n  }\n\n  // const renderScene = () => {\n  //   return scene.map(({ name, message }, index) => (\n  //     <div key={index}>\n  //       <h3 style={{display: 'block'}}>\n  //         {name}\n  //       </h3>\n  //       <span style={{ width: '650px', height: 'auto'}}>{message}</span>\n  //     </div>\n  //   ))\n  // }\n\n  return (\n    <div id=\"mario-chat\" style={{backgroundImage: 'url(./images/scrolly.png)', backgroundAttachment: 'scroll', backgroundRepeat: 'no-repeat', backgroundSize: 'cover', width: '550px', marginRight: '0'}} >\n      <h2 style={{ fontSize: '2em', width: '300px', paddingLeft: '35px', paddingTop: '100px', margin: 'auto', textDecoration: 'underline', fontFamily: 'fantasy'}}><strong>Kingdom chat</strong></h2>\n      <div id=\"chat-window\" style={{ paddingTop: '5px', width: '520px', minHeight: '260px', height: '100%', padding: '30px'}}>\n        {renderChat()}\n      </div>\n      <Form onSubmit={onMessageSubmit}>\n      <Form.Label style={{ fontSize: '1.4em', paddingLeft: '50px'}}><strong>Player Name:</strong></Form.Label>\n        <input style={{backgroundColor: 'beige', borderRadius: '7px', fontSize: '1.4em', marginLeft: '5px'}} size=\"lg\" id=\"name\" name=\"name\" type=\"text\" placeholder=\"Name...\" onChange={(e) => onTextChange(e)}/>\n        <p />\n        <Form.Label style={{ fontSize: '1.4em', paddingLeft: '50px'}}><strong>Type Message:</strong></Form.Label>\n        <input style={{backgroundColor: 'beige', borderRadius: '7px', fontSize: '1.4em', marginLeft: '5px', marginBottom: '15px'}} id=\"message\" name=\"message\" type=\"text\" placeholder=\"Message...\" onChange={(e) => onTextChange(e)}/>\n        <p/>\n        <button id=\"send\" variant=\"dark\" type=\"submit\" style={{ color: 'white', backgroundColor: '#595959', marginLeft: '45%', padding: '10px 15px', marginBottom: '35px', borderRadius: '10px'}}>Send</button>\n      </Form>\n      <p/>\n    </div>\n  )\n}\n\nexport default Chat;\n\n// style={{ backgroundColor: 'lightgray', border: '3px solid lightgray', borderRadius: '9px', width: '500px', minHeight: '200px', height: 'auto', margin: 'auto', display: 'inline-block'}}\n","/Users/michaeleclavea/Desktop/codeFellow/code401/testSpace/gametest/src/Loot.js",["87","88","89","90","91","92","93","94"],"import React from 'react';\n\n\n\nfunction Loot(){\n\n    const styleLoot = {\n        borderRadius: '7px', \n        display: 'flex', \n        alignItems: 'center', \n        justifyContent: 'center'\n    }\n\n    const styleImg = {\n        height: '80px',\n        width: 'auto' \n    }\n\n\n\n    return(\n        <div id='loot-container' style={{display: 'inline-block', float: 'right'}}>\n        <section style={{ backgroundImage: 'url(./images/Loot.png)', backgroundSize: '100% 100%', padding: '2px 20px 2px 20px', height: '500px', width: '250px', margin: 'auto', backgroundRepeat: 'no-repeat', borderRadius: '7px', display: 'grid', gridTemplateColumns: '1fr 1fr', gridTemplateRows: '1fr 1fr 1fr 1fr', border: '1px solid black', backgroundColor: 'gray'}}>\n        <div style={styleLoot}><img style={styleImg} src='./images/icons/axe.png'></img></div>\n        <div style={styleLoot}><img style={styleImg} src='./images/icons/book.png'></img></div>\n        <div style={styleLoot}><img style={styleImg} src='./images/icons/gold.png'></img></div>\n        <div style={styleLoot}><img style={styleImg} src='./images/icons/potion.png'></img></div>\n        <div style={styleLoot}><img style={styleImg} src='./images/icons/sword.png'></img></div>\n        <div style={styleLoot}><img style={styleImg} src='./images/icons/dagger.png'></img></div>\n        <div style={styleLoot}><img style={styleImg} src='./images/icons/club.png'></img></div>\n        <div style={styleLoot}><img style={styleImg} src='./images/icons/bow.png'></img></div>        \n        </section>\n        </div>\n    )\n}\n\nexport default Loot;\n\n\n","/Users/michaeleclavea/Desktop/codeFellow/code401/testSpace/gametest/src/Scenes.js",["95","96"],"import React, { useState, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n\n\nconst Scenes = (props) => {\n  const client = props.client;\n  const [scene, setScene] = useState([]);\n\n  \n    client.on('scenario', (scenario) => {\n      setScene([{ name: scenario.name, message: scenario.dialogue }])\n      switch(scenario.type) {\n        case 'roll':\n          // code block\n          break;\n        case 'choice2':\n          // code block\n          break;\n        case 'choice3':\n          // code block\n          break;\n        case 'choice4':\n          // code block\n          break;\n        case 'riddle':\n          // code block\n          break;\n        case 'ready':\n\n          // code block\n          break;\n        case 'luck':\n          // code block\n          break;\n        default:\n          // code block\n      }\n    });\n\n    \n\n  const renderScene = () => {\n    return scene.map(({ name, message }, index) => (\n      <div key={index}>\n        <h3 style={{display: 'block', textAlign: 'center', textDecoration: 'underline'}}>\n          {name}\n        </h3>\n        <span style={{ width: '650px', height: 'auto'}}>{message}</span>\n      </div>\n    ))\n  }\n\n\n\n  return (\n\n      <div id=\"dialogue-window\" style={{ backgroundColor: 'lightgray', borderRadius: '10px', fontSize: '1.7em', color: 'black', display: 'inline-block', width: '750px', minHeight: '500px', height: 'auto', border: '6px solid black', padding: '5px 10px 10px 10px'}}>\n        {renderScene()}``\n      </div>\n\n  )\n}\n\nexport default Scenes;","/Users/michaeleclavea/Desktop/codeFellow/code401/testSpace/gametest/src/SceneVideo.js",["97","98","99"],"import React, { useState, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nconst SceneVideo = (props) => {\n    const client = props.client;\n  const [scene, setScene] = useState([]);\n\n  \n    client.on('scenario', (scenario) => {\n      setScene([{ video: scenario.video }])\n      switch(scenario.type) {\n        case 'roll':\n          // code block\n          break;\n        case 'choice2':\n          // code block\n          break;\n        case 'choice3':\n          // code block\n          break;\n        case 'choice4':\n          // code block\n          break;\n        case 'riddle':\n          // code block\n          break;\n        case 'ready':\n\n          // code block\n          break;\n        case 'luck':\n          // code block\n          break;\n        default:\n          // code block\n      }\n    });\n\n    \n\n  const renderSceneVideo = () => {\n    return scene.map(({ video }, index) => (  \n      <video autoPlay src={video} key={index} style={{ width: '1250px', height: 'auto'}} autoPlay></video>\n    ))\n  }\n\n\n\n  return (\n\n      <div id=\"video-window\" >\n        {renderSceneVideo()}\n      </div>\n\n  )\n}\n\nexport default SceneVideo;",["100","101"],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":3,"column":26,"nodeType":"108","messageId":"109","endLine":3,"endColumn":35},{"ruleId":"106","severity":1,"message":"110","line":7,"column":14,"nodeType":"108","messageId":"109","endLine":7,"endColumn":20},{"ruleId":"106","severity":1,"message":"111","line":14,"column":5,"nodeType":"108","messageId":"109","endLine":14,"endColumn":10},{"ruleId":"106","severity":1,"message":"112","line":22,"column":17,"nodeType":"108","messageId":"109","endLine":22,"endColumn":25},{"ruleId":"113","severity":1,"message":"114","line":24,"column":32,"nodeType":"115","endLine":24,"endColumn":83},{"ruleId":"113","severity":1,"message":"114","line":25,"column":32,"nodeType":"115","endLine":25,"endColumn":84},{"ruleId":"113","severity":1,"message":"114","line":26,"column":32,"nodeType":"115","endLine":26,"endColumn":84},{"ruleId":"113","severity":1,"message":"114","line":27,"column":32,"nodeType":"115","endLine":27,"endColumn":86},{"ruleId":"113","severity":1,"message":"114","line":28,"column":32,"nodeType":"115","endLine":28,"endColumn":85},{"ruleId":"113","severity":1,"message":"114","line":29,"column":32,"nodeType":"115","endLine":29,"endColumn":86},{"ruleId":"113","severity":1,"message":"114","line":30,"column":32,"nodeType":"115","endLine":30,"endColumn":84},{"ruleId":"113","severity":1,"message":"114","line":31,"column":32,"nodeType":"115","endLine":31,"endColumn":83},{"ruleId":"116","severity":1,"message":"117","line":40,"column":1,"nodeType":"118","messageId":"119","endLine":42,"endColumn":22},{"ruleId":"106","severity":1,"message":"107","line":1,"column":27,"nodeType":"108","messageId":"109","endLine":1,"endColumn":36},{"ruleId":"102","replacedBy":"120"},{"ruleId":"104","replacedBy":"121"},{"ruleId":"102","replacedBy":"122"},{"ruleId":"104","replacedBy":"123"},{"ruleId":"106","severity":1,"message":"107","line":3,"column":26,"nodeType":"108","messageId":"109","endLine":3,"endColumn":35},{"ruleId":"106","severity":1,"message":"110","line":8,"column":14,"nodeType":"108","messageId":"109","endLine":8,"endColumn":20},{"ruleId":"106","severity":1,"message":"124","line":9,"column":10,"nodeType":"108","messageId":"109","endLine":9,"endColumn":14},{"ruleId":"106","severity":1,"message":"111","line":16,"column":5,"nodeType":"108","messageId":"109","endLine":16,"endColumn":10},{"ruleId":"106","severity":1,"message":"125","line":23,"column":10,"nodeType":"108","messageId":"109","endLine":23,"endColumn":15},{"ruleId":"126","severity":1,"message":"127","line":65,"column":39,"nodeType":"128","messageId":"129","endLine":65,"endColumn":46},{"ruleId":"106","severity":1,"message":"130","line":2,"column":10,"nodeType":"108","messageId":"109","endLine":2,"endColumn":12},{"ruleId":"106","severity":1,"message":"131","line":5,"column":8,"nodeType":"108","messageId":"109","endLine":5,"endColumn":14},{"ruleId":"113","severity":1,"message":"114","line":24,"column":32,"nodeType":"115","endLine":24,"endColumn":83},{"ruleId":"113","severity":1,"message":"114","line":25,"column":32,"nodeType":"115","endLine":25,"endColumn":84},{"ruleId":"113","severity":1,"message":"114","line":26,"column":32,"nodeType":"115","endLine":26,"endColumn":84},{"ruleId":"113","severity":1,"message":"114","line":27,"column":32,"nodeType":"115","endLine":27,"endColumn":86},{"ruleId":"113","severity":1,"message":"114","line":28,"column":32,"nodeType":"115","endLine":28,"endColumn":85},{"ruleId":"113","severity":1,"message":"114","line":29,"column":32,"nodeType":"115","endLine":29,"endColumn":86},{"ruleId":"113","severity":1,"message":"114","line":30,"column":32,"nodeType":"115","endLine":30,"endColumn":84},{"ruleId":"113","severity":1,"message":"114","line":31,"column":32,"nodeType":"115","endLine":31,"endColumn":83},{"ruleId":"106","severity":1,"message":"107","line":1,"column":27,"nodeType":"108","messageId":"109","endLine":1,"endColumn":36},{"ruleId":"106","severity":1,"message":"130","line":2,"column":10,"nodeType":"108","messageId":"109","endLine":2,"endColumn":12},{"ruleId":"106","severity":1,"message":"107","line":1,"column":27,"nodeType":"108","messageId":"109","endLine":1,"endColumn":36},{"ruleId":"106","severity":1,"message":"130","line":2,"column":10,"nodeType":"108","messageId":"109","endLine":2,"endColumn":12},{"ruleId":"132","severity":1,"message":"133","line":45,"column":90,"nodeType":"134","endLine":45,"endColumn":98},{"ruleId":"102","replacedBy":"135"},{"ruleId":"104","replacedBy":"136"},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Socket' is defined but never used.","'count' is assigned a value but never used.","'setScene' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock",["137"],["138"],["137"],["138"],"'left' is defined but never used.","'scene' is assigned a value but never used.","no-dupe-keys","Duplicate key 'display'.","ObjectExpression","unexpected","'io' is defined but never used.","'Button' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["137"],["138"],"no-global-assign","no-unsafe-negation"]