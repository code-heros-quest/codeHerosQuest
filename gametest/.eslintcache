[{"/Users/sararussert/codefellows/401/testSpace/gametest/src/index.js":"1","/Users/sararussert/codefellows/401/testSpace/gametest/src/App.js":"2","/Users/sararussert/codefellows/401/testSpace/gametest/src/screens/GameScreen.js":"3","/Users/sararussert/codefellows/401/testSpace/gametest/src/screens/JoinScreen.js":"4","/Users/sararussert/codefellows/401/testSpace/gametest/src/screens/WelcomeScreen.js":"5","/Users/sararussert/codefellows/401/testSpace/gametest/src/screens/CreateScreen.js":"6","/Users/sararussert/codefellows/401/testSpace/gametest/src/components/Loot.js":"7","/Users/sararussert/codefellows/401/testSpace/gametest/src/components/SceneVideo.js":"8","/Users/sararussert/codefellows/401/testSpace/gametest/src/components/Chat.js":"9","/Users/sararussert/codefellows/401/testSpace/gametest/src/components/Dialogue.js":"10","/Users/sararussert/codefellows/401/testSpace/gametest/src/components/connect.js":"11"},{"size":222,"mtime":1608245884765,"results":"12","hashOfConfig":"13"},{"size":674,"mtime":1608251926335,"results":"14","hashOfConfig":"13"},{"size":2023,"mtime":1608255186986,"results":"15","hashOfConfig":"13"},{"size":2314,"mtime":1608255189656,"results":"16","hashOfConfig":"13"},{"size":1022,"mtime":1608245884766,"results":"17","hashOfConfig":"13"},{"size":2410,"mtime":1608254954763,"results":"18","hashOfConfig":"13"},{"size":1588,"mtime":1608245884758,"results":"19","hashOfConfig":"13"},{"size":1214,"mtime":1608245884759,"results":"20","hashOfConfig":"13"},{"size":2911,"mtime":1608245884758,"results":"21","hashOfConfig":"13"},{"size":1826,"mtime":1608245884758,"results":"22","hashOfConfig":"13"},{"size":199,"mtime":1608245884759,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1t0zvlz",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"/Users/sararussert/codefellows/401/testSpace/gametest/src/index.js",[],["53","54"],"/Users/sararussert/codefellows/401/testSpace/gametest/src/App.js",[],"/Users/sararussert/codefellows/401/testSpace/gametest/src/screens/GameScreen.js",["55","56","57"],"\nimport '../App.css';\nimport React, {useState, useEffect} from 'react';\nimport SceneVideo from '../components/SceneVideo.js';\nimport Loot from '../components/Loot.js';\nimport Dialogue from '../components/Dialogue.js';\nimport Chat from '../components/Chat.js';\nimport client from '../components/connect.js';\n\nlet count = 0; \nlet sceneCount = 0;\n\n\n\nfunction GameScreen() {\n  const welcome = <h1 style={{ color: 'gray'}}>Click next to start the game!</h1>\n  const [scene, setScene] = useState(welcome);\n\n  client.on('scenario', (scenario) => {\n    setScene([{ video: scenario.video }])\n    switch(scenario.type) {\n      case 'roll':\n        // code block\n        break;\n      case 'choice2':\n        // code block\n        break;\n      case 'choice3':\n        // code block\n        break;\n      case 'choice4':\n        // code block\n        break;\n      case 'riddle':\n        // code block\n        break;\n      case 'ready':\n\n        // code block\n        break;\n      case 'luck':\n        // code block\n        break;\n      default:\n        // code block\n    }\n  });\n\n  function emitReady(){\n    sceneCount++;\n    client.emit('ready', sceneCount);\n    alert('ready');\n  }\n\n  \n\n  return (\n    <>\n      <div style={{  display: 'block', textAlign: 'center'}}>\n      <div id='sceneWindow' style={{ display: 'inline-block', backgroundColor: 'black', width: '1250px', height: 'auto', margin: 'auto'}}>\n      <SceneVideo client={client}/>\n      </div>\n      <div style={{ display: 'inline-block', paddingLeft: '20px'}}>\n      <Loot />\n      </div>\n      </div>\n      <button  onClick={emitReady} style={{ display: 'block', margin: 'auto', marginTop: '10px'}} name=\"ready\">Next Scene</button>\n      <section style={{ display: 'grid', gridTemplateRows: '1fr', gridTemplateColumns: '1fr 1fr', margin: 'auto'}}>\n      <div style={{ textAlign: 'right'}}><Dialogue client={client}/></div>\n      <div style={{ marginLeft: '0', paddingLeft: '50px'}}><Chat client={client}/></div>\n      </section>\n    </>\n  );\n}\n\nexport default GameScreen;\n","/Users/sararussert/codefellows/401/testSpace/gametest/src/screens/JoinScreen.js",[],"/Users/sararussert/codefellows/401/testSpace/gametest/src/screens/WelcomeScreen.js",[],"/Users/sararussert/codefellows/401/testSpace/gametest/src/screens/CreateScreen.js",[],"/Users/sararussert/codefellows/401/testSpace/gametest/src/components/Loot.js",["58","59","60","61","62","63","64","65"],"import React from 'react';\n\n\n\nfunction Loot(){\n\n    const styleLoot = {\n        borderRadius: '7px', \n        display: 'flex', \n        alignItems: 'center', \n        justifyContent: 'center'\n    }\n\n    const styleImg = {\n        height: '80px',\n        width: 'auto' \n    }\n\n\n\n    return(\n        <div id='loot-container' style={{display: 'inline-block', float: 'right'}}>\n        <section style={{ backgroundImage: 'url(./images/Loot.png)', backgroundSize: '100% 100%', padding: '2px 20px 2px 20px', height: '500px', width: '250px', margin: 'auto', backgroundRepeat: 'no-repeat', borderRadius: '7px', display: 'grid', gridTemplateColumns: '1fr 1fr', gridTemplateRows: '1fr 1fr 1fr 1fr', border: '1px solid black', backgroundColor: 'gray'}}>\n        <div style={styleLoot}><img style={styleImg} src='./images/icons/axe.png'></img></div>\n        <div style={styleLoot}><img style={styleImg} src='./images/icons/book.png'></img></div>\n        <div style={styleLoot}><img style={styleImg} src='./images/icons/gold.png'></img></div>\n        <div style={styleLoot}><img style={styleImg} src='./images/icons/potion.png'></img></div>\n        <div style={styleLoot}><img style={styleImg} src='./images/icons/sword.png'></img></div>\n        <div style={styleLoot}><img style={styleImg} src='./images/icons/dagger.png'></img></div>\n        <div style={styleLoot}><img style={styleImg} src='./images/icons/club.png'></img></div>\n        <div style={styleLoot}><img style={styleImg} src='./images/icons/bow.png'></img></div>        \n        </section>\n        </div>\n    )\n}\n\nexport default Loot;\n\n\n","/Users/sararussert/codefellows/401/testSpace/gametest/src/components/SceneVideo.js",["66","67","68"],"import React, { useState, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nconst SceneVideo = (props) => {\n  const client = props.client;\n  const [scene, setScene] = useState([]);\n\n  \n    client.on('scenario', (scenario) => {\n      setScene([{ video: scenario.video }])\n      switch(scenario.type) {\n        case 'roll':\n          // code block\n          break;\n        case 'choice2':\n          // code block\n          break;\n        case 'choice3':\n          // code block\n          break;\n        case 'choice4':\n          // code block\n          break;\n        case 'riddle':\n          // code block\n          break;\n        case 'ready':\n          // code block\n          break;\n        case 'luck':\n          // code block\n          break;\n        default:\n          // code block\n      }\n    });\n\n    \n\n  const renderSceneVideo = () => {\n    return scene.map(({ video }, index) => ( \n     <iframe autoPlay src={video} key={index} style={{ width: '1250px', height: '750px', border: 'none'}} controls></iframe>\n    ))\n  }\n\n\n\n  return (\n\n      <div id=\"video-window\" >\n        {renderSceneVideo()}\n      </div>\n\n  )\n}\n\nexport default SceneVideo;","/Users/sararussert/codefellows/401/testSpace/gametest/src/components/Chat.js",["69"],"import React, { useState, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Form from 'react-bootstrap/Form'\n\n\n\n\nconst Chat = (props) => {\n  const client = props.client;\n  const [state, setState] = useState({message: '', name: ''});\n  const [chat, setChat] = useState([]);\n\n\n  useEffect(() => {\n    client.on('chat', ({name, message}) => {\n      setChat([...chat, { name, message }])\n    })\n    \n    client.on('result', payload => {\n      setChat([...payload, { name: payload.name, message: payload.dialogue }])\n      // do ready check, serve payload.num\n    })\n  })\n\n  const onTextChange = e => {\n    setState({...state, [e.target.name]: e.target.value})\n  }\n\n  const onMessageSubmit = (e) => {\n    e.preventDefault();\n    const { message, name } = state;\n    console.log(name, message);\n    client.emit('chat', {name, message});\n    setState({ message: '', name });\n  }\n\n  const renderChat = () => {\n    return chat.map(({ name, message }, index) => (\n      <div key={index}>\n        <h3 style={{fontSize: '1.6em'}}>\n        <strong>{name}:</strong> <span>{message}</span>\n        </h3>\n        <p style={{fontSize: '10px'}}>_____________________________________</p>\n      </div>\n    ))\n  }\n\n  return (\n    <div id=\"mario-chat\" style={{backgroundImage: 'url(./images/scrolly.png)', backgroundAttachment: 'scroll', backgroundRepeat: 'no-repeat', backgroundSize: 'cover', width: '550px', marginRight: '0'}} >\n      <h2 style={{ fontSize: '2em', width: '300px', paddingLeft: '35px', paddingTop: '100px', margin: 'auto', textDecoration: 'underline', fontFamily: 'fantasy'}}><strong>Kingdom chat</strong></h2>\n      <div id=\"chat-window\" style={{ paddingTop: '5px', width: '520px', minHeight: '260px', height: 'auto', padding: '30px 0 30px 30px'}}>\n        {renderChat()}\n      </div>\n      <Form onSubmit={onMessageSubmit}>\n      <Form.Label style={{ fontSize: '1.4em', paddingLeft: '50px'}}><strong>Player Name:</strong></Form.Label>\n        <input style={{backgroundColor: 'rgba(199, 199, 199, 0)', borderRadius: '7px', fontSize: '1.4em', marginLeft: '5px'}} size=\"lg\" id=\"name\" name=\"name\" type=\"text\" placeholder=\"Name...\" onChange={(e) => onTextChange(e)}/>\n        <p />\n        <Form.Label style={{ fontSize: '1.4em', paddingLeft: '50px'}}><strong>Type Message:</strong></Form.Label>\n        <input style={{backgroundColor: 'rgba(199, 199, 199, 0)', borderRadius: '7px', fontSize: '1.4em', marginLeft: '5px', marginBottom: '15px'}} id=\"message\" name=\"message\" type=\"text\" placeholder=\"Message...\" onChange={(e) => onTextChange(e)}/>\n        <p/>\n        <button id=\"send\" type=\"submit\" style={{ color: 'white', boxShadow: '5px 5px 10px black', backgroundColor: '#595959', marginLeft: '45%', padding: '10px 15px', marginBottom: '35px', borderRadius: '10px'}}>Send</button>\n      </Form>\n      <p/>\n    </div>\n  )\n}\n\nexport default Chat;\n\n","/Users/sararussert/codefellows/401/testSpace/gametest/src/components/Dialogue.js",["70","71"],"import React, { useState, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n\n\nconst Dialogue = (props) => {\n  const client = props.client;\n  const [scene, setScene] = useState([]);\n\n  \n    client.on('scenario', (scenario) => {\n      setScene([{ name: scenario.name, message: scenario.dialogue }])\n      switch(scenario.type) {\n        case 'roll':\n          // code block\n          break;\n        case 'choice2':\n          // code block\n          break;\n        case 'choice3':\n          // code block\n          break;\n        case 'choice4':\n          // code block\n          break;\n        case 'riddle':\n          // code block\n          break;\n        case 'ready':\n\n          // code block\n          break;\n        case 'luck':\n          // code block\n          break;\n        default:\n          // code block\n      }\n    });\n\n    \n\n  const renderScene = () => {\n    return scene.map(({ name, message }, index) => (\n      <div key={index} style={{ display: 'flex', flexDirection: 'column'}}>\n        <h3 style={{ width: '400px', marginLeft: 'auto', marginRight: 'auto', fontSize: '1em', paddingTop: '35px', textAlign: 'center', fontFamily: 'fantasy'}}>\n          {name}\n        </h3>\n        <div style={{ padding: '15px 30px 0px 30px', objectFit: 'contain', fontSize: '1em', textAlign: 'left'}}>\n        {message}\n        </div>\n\n      </div>\n    ))\n  }\n\n\n\n  return (\n\n      <div id=\"dialogue-window\" style={{ backgroundImage: 'url(./images/textBox/text2.png)', backgroundSize: '100% 100%', borderRadius: '10px', fontSize: '1.7em', color: 'black', display: 'inline-block', width: '778px', minHeight: '510px', height: 'auto', border: '6px solid black', padding: '5px 10px 10px 10px'}}>\n        {renderScene()}``\n      </div>\n\n  )\n}\n\nexport default Dialogue;","/Users/sararussert/codefellows/401/testSpace/gametest/src/components/connect.js",[],["72","73"],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":3,"column":26,"nodeType":"80","messageId":"81","endLine":3,"endColumn":35},{"ruleId":"78","severity":1,"message":"82","line":10,"column":5,"nodeType":"80","messageId":"81","endLine":10,"endColumn":10},{"ruleId":"78","severity":1,"message":"83","line":17,"column":10,"nodeType":"80","messageId":"81","endLine":17,"endColumn":15},{"ruleId":"84","severity":1,"message":"85","line":24,"column":32,"nodeType":"86","endLine":24,"endColumn":83},{"ruleId":"84","severity":1,"message":"85","line":25,"column":32,"nodeType":"86","endLine":25,"endColumn":84},{"ruleId":"84","severity":1,"message":"85","line":26,"column":32,"nodeType":"86","endLine":26,"endColumn":84},{"ruleId":"84","severity":1,"message":"85","line":27,"column":32,"nodeType":"86","endLine":27,"endColumn":86},{"ruleId":"84","severity":1,"message":"85","line":28,"column":32,"nodeType":"86","endLine":28,"endColumn":85},{"ruleId":"84","severity":1,"message":"85","line":29,"column":32,"nodeType":"86","endLine":29,"endColumn":86},{"ruleId":"84","severity":1,"message":"85","line":30,"column":32,"nodeType":"86","endLine":30,"endColumn":84},{"ruleId":"84","severity":1,"message":"85","line":31,"column":32,"nodeType":"86","endLine":31,"endColumn":83},{"ruleId":"78","severity":1,"message":"79","line":1,"column":27,"nodeType":"80","messageId":"81","endLine":1,"endColumn":36},{"ruleId":"78","severity":1,"message":"87","line":2,"column":10,"nodeType":"80","messageId":"81","endLine":2,"endColumn":12},{"ruleId":"88","severity":1,"message":"89","line":44,"column":6,"nodeType":"86","endLine":44,"endColumn":116},{"ruleId":"78","severity":1,"message":"87","line":2,"column":10,"nodeType":"80","messageId":"81","endLine":2,"endColumn":12},{"ruleId":"78","severity":1,"message":"79","line":1,"column":27,"nodeType":"80","messageId":"81","endLine":1,"endColumn":36},{"ruleId":"78","severity":1,"message":"87","line":2,"column":10,"nodeType":"80","messageId":"81","endLine":2,"endColumn":12},{"ruleId":"74","replacedBy":"90"},{"ruleId":"76","replacedBy":"91"},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'count' is assigned a value but never used.","'scene' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'io' is defined but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.",["92"],["93"],"no-global-assign","no-unsafe-negation"]