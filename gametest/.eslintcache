[{"/Users/sararussert/codefellows/401/testSpace/gametest/src/index.js":"1","/Users/sararussert/codefellows/401/testSpace/gametest/src/App.js":"2","/Users/sararussert/codefellows/401/testSpace/gametest/src/screens/JoinScreen.js":"3","/Users/sararussert/codefellows/401/testSpace/gametest/src/screens/WelcomeScreen.js":"4","/Users/sararussert/codefellows/401/testSpace/gametest/src/screens/CreateScreen.js":"5","/Users/sararussert/codefellows/401/testSpace/gametest/src/screens/GameScreen.js":"6","/Users/sararussert/codefellows/401/testSpace/gametest/src/components/connect.js":"7","/Users/sararussert/codefellows/401/testSpace/gametest/src/components/ChooseCharacterButtons.js":"8","/Users/sararussert/codefellows/401/testSpace/gametest/src/components/SceneVideo.js":"9","/Users/sararussert/codefellows/401/testSpace/gametest/src/components/Loot.js":"10","/Users/sararussert/codefellows/401/testSpace/gametest/src/components/Dialogue.js":"11","/Users/sararussert/codefellows/401/testSpace/gametest/src/components/Chat.js":"12","/Users/sararussert/codefellows/401/testSpace/gametest/src/components/GameButtons.js":"13","/Users/sararussert/codefellows/401/testSpace/gametest/src/components/Ready2.js":"14","/Users/sararussert/codefellows/401/testSpace/gametest/src/components/Luck3.js":"15","/Users/sararussert/codefellows/401/testSpace/gametest/src/components/Start.js":"16","/Users/sararussert/codefellows/401/testSpace/gametest/src/components/Roll.js":"17","/Users/sararussert/codefellows/401/testSpace/gametest/src/components/Ready.js":"18","/Users/sararussert/codefellows/401/testSpace/gametest/src/components/Choice2.js":"19","/Users/sararussert/codefellows/401/testSpace/gametest/src/components/Choice3.js":"20","/Users/sararussert/codefellows/401/testSpace/gametest/src/components/Riddle.js":"21","/Users/sararussert/codefellows/401/testSpace/gametest/src/components/Choice4.js":"22","/Users/sararussert/codefellows/401/testSpace/gametest/src/components/Luck.js":"23"},{"size":222,"mtime":1608245884765,"results":"24","hashOfConfig":"25"},{"size":674,"mtime":1608251926335,"results":"26","hashOfConfig":"25"},{"size":6706,"mtime":1608591257920,"results":"27","hashOfConfig":"25"},{"size":1604,"mtime":1608613827415,"results":"28","hashOfConfig":"25"},{"size":7361,"mtime":1608591257918,"results":"29","hashOfConfig":"25"},{"size":2427,"mtime":1608613827414,"results":"30","hashOfConfig":"25"},{"size":201,"mtime":1608493016180,"results":"31","hashOfConfig":"25"},{"size":849,"mtime":1608412573834,"results":"32","hashOfConfig":"25"},{"size":1014,"mtime":1608658568742,"results":"33","hashOfConfig":"25"},{"size":3613,"mtime":1608658568742,"results":"34","hashOfConfig":"25"},{"size":1113,"mtime":1608658568741,"results":"35","hashOfConfig":"25"},{"size":2485,"mtime":1608658568737,"results":"36","hashOfConfig":"25"},{"size":1484,"mtime":1608590647839,"results":"37","hashOfConfig":"25"},{"size":695,"mtime":1608526075846,"results":"38","hashOfConfig":"25"},{"size":1444,"mtime":1608526075845,"results":"39","hashOfConfig":"25"},{"size":732,"mtime":1608526075850,"results":"40","hashOfConfig":"25"},{"size":725,"mtime":1608591257906,"results":"41","hashOfConfig":"25"},{"size":685,"mtime":1608591257906,"results":"42","hashOfConfig":"25"},{"size":1141,"mtime":1608658568739,"results":"43","hashOfConfig":"25"},{"size":1201,"mtime":1608658568740,"results":"44","hashOfConfig":"25"},{"size":1173,"mtime":1608658568742,"results":"45","hashOfConfig":"25"},{"size":1349,"mtime":1608658568741,"results":"46","hashOfConfig":"25"},{"size":1747,"mtime":1608658568742,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1t0zvlz",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},"/Users/sararussert/codefellows/401/testSpace/gametest/src/index.js",[],["104","105"],"/Users/sararussert/codefellows/401/testSpace/gametest/src/App.js",[],"/Users/sararussert/codefellows/401/testSpace/gametest/src/screens/JoinScreen.js",[],"/Users/sararussert/codefellows/401/testSpace/gametest/src/screens/WelcomeScreen.js",[],"/Users/sararussert/codefellows/401/testSpace/gametest/src/screens/CreateScreen.js",[],"/Users/sararussert/codefellows/401/testSpace/gametest/src/screens/GameScreen.js",[],"/Users/sararussert/codefellows/401/testSpace/gametest/src/components/connect.js",[],"/Users/sararussert/codefellows/401/testSpace/gametest/src/components/ChooseCharacterButtons.js",["106"],"import React, { useState, useEffect } from 'react';\nimport client from './connect.js';\nimport './Buttons.css';\n\nconst ChooseCharacterButton = (props) => {\n  const [characters, setCharacters] = useState([]);\n\n  useEffect(() => {\n    setCharacters(props.characters);\n\n  }, [props])\n\n\n  const choseCharacter = (e) => {\n    e.preventDefault();\n    props.chosenCharacter(e)\n  }\n\n  return (\n    <div>\n      {characters.map((character, index) => (\n        <button style={{ cursor: 'pointer', backgroundColor: 'transparent', border: 'none', marginRight: '30px' }} onClick={choseCharacter} key={character.role}>\n          <img src={character.img} style={{ height: '150px' }} name=\"char\" alt={character.role} />\n          <p style={{ cursor: 'no-drop' }}>{character.role}</p>\n        </button>\n      ))}\n    </div>\n  )\n}\n\nexport default ChooseCharacterButton ","/Users/sararussert/codefellows/401/testSpace/gametest/src/components/SceneVideo.js",["107","108","109","110"],"import React, { useState, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nconst SceneVideo = (props) => {\n  const [scene, setScene] = useState([{ video: null }]);\n\n  useEffect(() => {\n    setScene([{ video: props.scenario.video }])\n    console.log('updating video in scene vid from props')\n  }, [props.scenario])\n\n\n  const renderSceneVideo = () => {\n    if (props.scenario.number === 1) {\n      return scene.map(({ video }, index) => (\n        <iframe autoPlay src={video} key={index} style={{ width: '100%', minwidth: '700px',  minHeight: '525px', height: '100%', border: 'none' }} autoPlay></iframe>\n      ))\n    } else {\n      return scene.map(({ video }, index) => (\n        <img src={video} key={index} style={{ width: 'auto', minWidth: '700px', height: '525px', minHeight: '525px', border: 'none' }}></img>\n      ))\n    }\n  }\n\n\n\n  return (\n\n    <div id=\"video-window\" >\n      {renderSceneVideo()}\n    </div>\n\n  )\n}\n\nexport default SceneVideo;","/Users/sararussert/codefellows/401/testSpace/gametest/src/components/Loot.js",["111","112","113","114"],"import React, { useState, useEffect } from 'react';\n\n\n\nfunction Loot(props) {\n    const [character, setCharacter] = useState({ img: '', loot: [], stats: {health: 0, attack: 0}})\n\n    useEffect(() => {\n        setCharacter(props.character)\n        console.log('updating character from props in loot');\n    }, [props.character])\n\n    const styleLoot = {\n        borderRadius: '7px',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n    }\n\n    const styleImg = {\n\n        height: '7vh',\n        width: '10vw' \n\n    }\n    const styleLi = {\n        display: 'inline-block',\n        color: 'white',\n        marginRight: '15px',\n    }\n\n    const style={\n        display: 'inline-block',\n        color: 'white',\n\n    }\n\n    return (\n        <div style={{ paddingTop: '20px', paddingBottom: '20px', marginLeft: '50%'}}>\n                <div>\n                    <img src={character.img} style={{ height: '100px', float: 'left'}}></img>\n                </div>\n            <div id='loot-container' style={{ display: 'grid', gridTemplateColumns: '1fr', gridTemplateRows: '1fr', height: '100px', textAlign: 'left'}}>\n                <div>\n                    <div>\n                        <h1 style={{color: 'white', fontSize: '1.4em', fontFamily: 'cursive', textDecoration: 'underline lightgray'}}>{character.name}</h1>\n                        <h5 style={style}>Health:</h5>\n                        <meter style={{display: 'inline-block'}} min=\"0\" low={character.lowHealth} optimum={character.maxHealth} high={character.highHealth} max={character.maxHealth} value={character.stats.health} />\n                    </div>\n                    <div>\n                        <h5 style={style}>Attack:</h5>\n                        <meter min=\"0\" low=\"9\" optimum=\"23\" high=\"17\" max=\"27\" value={character.stats.attack} />\n                    </div>\n                </div>\n            </div>\n                    <div style={{ display: 'inline-block', float: 'right'}}>\n                        <h5 style={style}>Loot:</h5>\n                        <ul style={{ display: 'inline-block'}}>\n                            {character.loot.map(item =>\n                            <li style={styleLi} key={item.name}>{item.name}</li>\n                        )}\n                        </ul>\n                    </div>\n        </div>\n    )\n}\n\nexport default Loot;\n\n\n\n\n            {/* <section style={{ backgroundImage: 'url(./images/Loot.png)', backgroundSize: '100% 100%', padding: '2px 20px 2px 20px', height: '500px', width: '250px', margin: 'auto', backgroundRepeat: 'no-repeat', borderRadius: '7px', display: 'grid', gridTemplateColumns: '1fr 1fr', gridTemplateRows: '1fr 1fr 1fr 1fr', border: '1px solid black', backgroundColor: 'gray' }}>\n\n                <div style={styleLoot}><img style={styleImg} src='./images/icons/axe.png'></img></div>\n                <div style={styleLoot}><img style={styleImg} src='./images/icons/book.png'></img></div>\n                <div style={styleLoot}><img style={styleImg} src='./images/icons/gold.png'></img></div>\n                <div style={styleLoot}><img style={styleImg} src='./images/icons/potion.png'></img></div>\n                <div style={styleLoot}><img style={styleImg} src='./images/icons/sword.png'></img></div>\n                <div style={styleLoot}><img style={styleImg} src='./images/icons/dagger.png'></img></div>\n                <div style={styleLoot}><img style={styleImg} src='./images/icons/club.png'></img></div>\n                <div style={styleLoot}><img style={styleImg} src='./images/icons/bow.png'></img></div>\n            </section> */}","/Users/sararussert/codefellows/401/testSpace/gametest/src/components/Dialogue.js",["115"],"import React, { useState, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Scroll.css';\n\n\n\nconst Dialogue = (props) => {\n  const [scene, setScene] = useState([])\n  useEffect(() => {\n    setScene([{ name: props.scenario.name, message: props.scenario.dialogue }])\n    console.log('updating scene in dialogue from props')\n  }, [props.scenario])\n\n\n\n  const renderScene = () => {\n    return scene.map(({ name, message }, index) => (\n      <div key={index} style={{ height: '100%', width: 'auto', minWidth: '300px'}}>\n        <h3 style={{ paddingTop: '20px', height: '15%', width: '100%', verticalAlign: 'bottom', marginLeft: 'auto', marginRight: 'auto', objectFit: 'contain', textAlign: 'center', fontFamily: 'fantasy', overflow: 'none'}}>\n          {name}\n        </h3>\n        <div className='scrollDiv2' >\n        {message}\n        </div>\n      </div>\n    ))\n  }\n\n\n\n  return (\n\n      <div id=\"dialogue-window\"  style={{backgroundImage: 'url(./images/textBox/text2.png)'}}>\n        {renderScene()}\n      </div>\n\n  )\n}\n\nexport default Dialogue;","/Users/sararussert/codefellows/401/testSpace/gametest/src/components/Chat.js",["116"],"import React, { useState, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Form from 'react-bootstrap/Form';\nimport client from './connect.js';\nimport './Scroll.css';\n\nlet chatArr = []\n\nconst Chat = (props) => {\n  const [character, setCharacter] = useState({});\n  const [state, setState] = useState({ message: '', name: '' });\n  const [chat, setChat] = useState([]);\n  useEffect(() => {\n    setCharacter(props.character)\n    console.log('setting chat character from props')\n  }, [props.character])\n  useEffect(() => {\n    setState({ name: character.name })\n    console.log('setting chat name state')\n  }, [character])\n  useEffect(() => {\n    client.on('chat', ({ name, message }) => {\n      chatArr.unshift({ name, message })\n      setChat(chatArr.slice(0))\n      console.log('setting chat')\n    })\n\n  }, [setChat])\n  const onTextChange = e => {\n    setState({ ...state, [e.target.name]: e.target.value })\n  }\n  const onMessageSubmit = (e) => {\n    e.preventDefault();\n    const { message, name } = state;\n    console.log(name, message);\n    client.emit('chat', { name, message });\n    setState({ message: '', name });\n    let doc = document.getElementById('message');\n    doc.value = '';\n  }\n  const renderChat = () => {\n    return chat.map(({ name, message }, index) => (\n      <div key={index}>\n\n        <h3 style={{fontSize: '1vw'}}>\n        <strong style={{ fontSize: '1.2em'}}>{name}:</strong> <span style={{ fontSize: '1.1em'}}>{message}</span>\n        <p style={{ fontSize: '8px', margin: '0'}}>___________________________</p>\n        </h3>\n\n      </div>\n    ))\n  }\n  return (\n\n    <div id=\"mario-chat\" style={{ backgroundImage: 'url(./images/scroll2.png)'}}>\n      <h2 style={{ fontSize: '1.6em', width: 'auto', height: 'auto', paddingTop: '35px', marginBottom: '10px', textDecoration: 'underline', fontFamily: 'fantasy'}}><strong>Kingdom chat</strong></h2>\n\n      <div id=\"chat-window\" className='scrollChat'>\n        {renderChat()}\n      </div>\n      <Form onSubmit={onMessageSubmit}>\n        <Form.Label style={{ fontSize: '1em'}}><strong>Type Message:</strong></Form.Label>\n        <span style={{display: 'flex', alignContent: 'center'}}>\n        <input id=\"message\" name=\"message\" type=\"text\" placeholder=\"Message...\" onChange={(e) => onTextChange(e)}/>\n        <p/>\n        <button id=\"send\" type=\"submit\" >Send</button>\n        </span>\n      </Form>\n      <p />\n    </div>\n  )\n}\nexport default Chat;","/Users/sararussert/codefellows/401/testSpace/gametest/src/components/GameButtons.js",["117"],"import React, { useState, useEffect } from 'react';\nimport Roll from './Roll';\nimport Choice2 from './Choice2';\nimport Choice3 from './Choice3';\nimport Ready from './Ready';\nimport Ready2 from './Ready2';\nimport Choice4 from './Choice4'\nimport Riddle from './Riddle'\nimport Luck from './Luck';\nimport Start from './Start';\nimport Luck3 from './Luck3';\n\n\nlet count = 0;\n\nconst GameButtons = (props) => {\n  const [scenario, setScenario] = useState({})\n  useEffect(() => {\n    setScenario(props.scenario)\n    count++;\n    console.log(count);\n  }, [props])\n  console.log(scenario);\n  switch (scenario.type) {\n    case 'roll':\n      return (\n        <Roll scenario={scenario} />\n      )\n    case 'choice2':\n      return (\n        <Choice2 scenario={scenario} />\n      )\n    case 'choice3':\n      return (\n        <Choice3 scenario={scenario} />\n      )\n    case 'choice4':\n      return (\n        <Choice4 scenario={scenario} />\n      )\n    case 'riddle':\n      return (\n        <Riddle scenario={scenario} />\n      )\n    case 'ready':\n      return (\n        <Ready scenario={scenario} />\n      )\n    case 'ready2':\n      return (\n        <Ready2 scenario={scenario} />\n      )\n    case 'luck':\n      return (\n        <Luck scenario={scenario} />\n      )\n    case 'luck3':\n      return (\n        <Luck3 scenario={scenario} />\n      )\n    case 'none':\n      return (\n        <>\n        </>\n      )\n    default:\n      return (\n        <>\n        </>\n      )\n  }\n}\n\nexport default GameButtons\n","/Users/sararussert/codefellows/401/testSpace/gametest/src/components/Ready2.js",[],"/Users/sararussert/codefellows/401/testSpace/gametest/src/components/Luck3.js",["118"],"import client from './connect.js';\nimport React, {useState} from 'react'\nimport './Luck.css';\nimport './Buttons.css';\n\n\nfunction Luck3(props) {\n  let luckTag = '';\n  const [tails, setTails] = useState('tails')\n  const [heads, setHeads] = useState('heads')\n  const [buttonText, setButtonText] = useState('Toss Coin');\n  \n  function tossCoin(){  \n    let count = Math.floor(Math.random() * 5) + 1; \n    if(count == 1){\n        setHeads('animate-tails');\n        setTails('animate-heads');\n        let luck = 0;\n        luckTag = 'You had poor luck';\n        let payload = { luck , scenario: props.scenario }\n        client.emit('luck', payload);\n    }\n    else{\n        setHeads('animate-heads');\n        setTails('animate-tails');\n        let luck = 1; \n        luckTag = 'You had good luck';\n        let payload = { luck , scenario: props.scenario }\n        client.emit('luck', payload);\n      }\n      setButtonText('Waiting for other players...');\n  }\n\n  return (\n    <div>\n      <div className=\"container\">\n        <p>{luckTag}</p>\n      </div>\n      <div id=\"coin\">\n        <div className={heads} style={{backgroundImage: 'url(./images/heads.png)', height: '202px', width: '198px',}}/>\n        <div className={tails} style={{backgroundImage: 'url(./images/tails.png)', height: '202px', width: '198px',}}/>\n      </div>\n        <button onClick={tossCoin} className='choiceButtons'>{buttonText}</button>\n    </div>\n  )\n}\n\nexport default Luck3;","/Users/sararussert/codefellows/401/testSpace/gametest/src/components/Start.js",[],"/Users/sararussert/codefellows/401/testSpace/gametest/src/components/Roll.js",["119","120"],"import React, { useEffect, useState } from 'react'\nimport client from './connect.js';\nimport Dice from 'react-dice-roll';\n\nlet roll = (Math.floor(Math.random() * Math.floor(6))) + 1;\n\n\nconst Roll = (props) => {\n  const [scenario, setScenario] = useState({});\n  const [show, setShow] = useState(false);\n\n  useEffect(() => {\n    setScenario(props.scenario)\n  }, [])\n  let rollTag = '';\n  const rollDice = () => {\n    setShow(true);\n    rollTag = `You Rolled a ${roll}`\n    let payload = { roll, scenario: scenario }\n    client.emit('roll', payload);\n  }\n\n  return (\n    <div>\n      <Dice onRoll={rollDice} defaultValue={6} cheatValue={roll} size={100} rollingTime={2000} disabled={show}/>\n    </div>\n  )\n}\n\nexport default Roll\n","/Users/sararussert/codefellows/401/testSpace/gametest/src/components/Ready.js",[],"/Users/sararussert/codefellows/401/testSpace/gametest/src/components/Choice2.js",[],"/Users/sararussert/codefellows/401/testSpace/gametest/src/components/Choice3.js",[],"/Users/sararussert/codefellows/401/testSpace/gametest/src/components/Riddle.js",[],"/Users/sararussert/codefellows/401/testSpace/gametest/src/components/Choice4.js",[],"/Users/sararussert/codefellows/401/testSpace/gametest/src/components/Luck.js",[],["121","122"],{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":2,"column":8,"nodeType":"129","messageId":"130","endLine":2,"endColumn":14},{"ruleId":"127","severity":1,"message":"131","line":2,"column":10,"nodeType":"129","messageId":"130","endLine":2,"endColumn":12},{"ruleId":"132","severity":1,"message":"133","line":18,"column":9,"nodeType":"134","endLine":18,"endColumn":157},{"ruleId":"135","severity":1,"message":"136","line":18,"column":148,"nodeType":"137","endLine":18,"endColumn":156},{"ruleId":"138","severity":1,"message":"139","line":22,"column":9,"nodeType":"134","endLine":22,"endColumn":136},{"ruleId":"127","severity":1,"message":"140","line":13,"column":11,"nodeType":"129","messageId":"130","endLine":13,"endColumn":20},{"ruleId":"127","severity":1,"message":"141","line":20,"column":11,"nodeType":"129","messageId":"130","endLine":20,"endColumn":19},{"ruleId":"138","severity":1,"message":"139","line":41,"column":21,"nodeType":"134","endLine":41,"endColumn":88},{"ruleId":"142","severity":1,"message":"143","line":73,"column":13,"nodeType":"144","messageId":"145","endLine":83,"endColumn":27},{"ruleId":"127","severity":1,"message":"131","line":2,"column":10,"nodeType":"129","messageId":"130","endLine":2,"endColumn":12},{"ruleId":"127","severity":1,"message":"131","line":2,"column":10,"nodeType":"129","messageId":"130","endLine":2,"endColumn":12},{"ruleId":"127","severity":1,"message":"146","line":10,"column":8,"nodeType":"129","messageId":"130","endLine":10,"endColumn":13},{"ruleId":"147","severity":1,"message":"148","line":15,"column":14,"nodeType":"149","messageId":"150","endLine":15,"endColumn":16},{"ruleId":"151","severity":1,"message":"152","line":14,"column":6,"nodeType":"153","endLine":14,"endColumn":8,"suggestions":"154"},{"ruleId":"127","severity":1,"message":"155","line":18,"column":5,"nodeType":"129","messageId":"130","endLine":18,"endColumn":12},{"ruleId":"123","replacedBy":"156"},{"ruleId":"125","replacedBy":"157"},"no-native-reassign",["158"],"no-negated-in-lhs",["159"],"no-unused-vars","'client' is defined but never used.","Identifier","unusedVar","'io' is defined but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'styleLoot' is assigned a value but never used.","'styleImg' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'Start' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.scenario'. Either include it or remove the dependency array. If 'setScenario' needs the current value of 'props.scenario', you can also switch to useReducer instead of useState and read 'props.scenario' in the reducer.","ArrayExpression",["160"],"'rollTag' is assigned a value but never used.",["158"],["159"],"no-global-assign","no-unsafe-negation",{"desc":"161","fix":"162"},"Update the dependencies array to be: [props.scenario]",{"range":"163","text":"164"},[360,362],"[props.scenario]"]
