[{"/Users/michaeleclavea/Desktop/codeFellow/testSpace/gametest/src/index.js":"1","/Users/michaeleclavea/Desktop/codeFellow/testSpace/gametest/src/App.js":"2","/Users/michaeleclavea/Desktop/codeFellow/testSpace/gametest/src/Loot.js":"3","/Users/michaeleclavea/Desktop/codeFellow/testSpace/gametest/src/Chat.js":"4","/Users/michaeleclavea/Desktop/codeFellow/testSpace/gametest/src/Scenes.js":"5","/Users/michaeleclavea/Desktop/codeFellow/code401/testSpace/gametest/src/index.js":"6","/Users/michaeleclavea/Desktop/codeFellow/code401/testSpace/gametest/src/App.js":"7","/Users/michaeleclavea/Desktop/codeFellow/code401/testSpace/gametest/src/screens/JoinScreen.js":"8","/Users/michaeleclavea/Desktop/codeFellow/code401/testSpace/gametest/src/screens/WelcomeScreen.js":"9","/Users/michaeleclavea/Desktop/codeFellow/code401/testSpace/gametest/src/screens/CreateScreen.js":"10","/Users/michaeleclavea/Desktop/codeFellow/code401/testSpace/gametest/src/screens/GameScreen.js":"11","/Users/michaeleclavea/Desktop/codeFellow/code401/testSpace/gametest/src/components/connect.js":"12","/Users/michaeleclavea/Desktop/codeFellow/code401/testSpace/gametest/src/components/Loot.js":"13","/Users/michaeleclavea/Desktop/codeFellow/code401/testSpace/gametest/src/components/SceneVideo.js":"14","/Users/michaeleclavea/Desktop/codeFellow/code401/testSpace/gametest/src/components/Chat.js":"15","/Users/michaeleclavea/Desktop/codeFellow/code401/testSpace/gametest/src/components/Dialogue.js":"16"},{"size":500,"mtime":1608079863940,"results":"17","hashOfConfig":"18"},{"size":2245,"mtime":1608152525594,"results":"19","hashOfConfig":"18"},{"size":1872,"mtime":1608081305375,"results":"20","hashOfConfig":"18"},{"size":2870,"mtime":1608144993592,"results":"21","hashOfConfig":"18"},{"size":1682,"mtime":1608150530238,"results":"22","hashOfConfig":"18"},{"size":222,"mtime":1608190685035,"results":"23","hashOfConfig":"24"},{"size":795,"mtime":1608245839617,"results":"25","hashOfConfig":"24"},{"size":1102,"mtime":1608244253266,"results":"26","hashOfConfig":"24"},{"size":1022,"mtime":1608244493823,"results":"27","hashOfConfig":"24"},{"size":1109,"mtime":1608244253962,"results":"28","hashOfConfig":"24"},{"size":2023,"mtime":1608245225814,"results":"29","hashOfConfig":"24"},{"size":199,"mtime":1608244285875,"results":"30","hashOfConfig":"24"},{"size":1588,"mtime":1608243904367,"results":"31","hashOfConfig":"24"},{"size":1214,"mtime":1608243919955,"results":"32","hashOfConfig":"24"},{"size":2911,"mtime":1608243899317,"results":"33","hashOfConfig":"24"},{"size":1826,"mtime":1608243901859,"results":"34","hashOfConfig":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"wxvrgx",{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"37"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"37"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"110ay80",{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"52"},"/Users/michaeleclavea/Desktop/codeFellow/testSpace/gametest/src/index.js",[],["80","81"],"/Users/michaeleclavea/Desktop/codeFellow/testSpace/gametest/src/App.js",["82","83","84","85"],"\nimport './App.css';\nimport React, {useState, useEffect} from 'react';\nimport Loot from './Loot.js';\nimport Chat from './Chat.js';\nimport Scenes from './Scenes.js';\nimport { io, Socket } from 'socket.io-client';\n\nconst client = io.connect('http://localhost:3001', {transports: ['websocket']});\nclient.on('connect', () => {\n  console.log('connected');\n});\n\nlet count = 0; \nlet sceneCount = 1;\n\n\n\nfunction App() {\n  const welcome = <h1 style={{ color: 'gray'}}>Welcome to Code Quest. Press the next scene to start the game. Good luck on your journey.</h1>\n  // const intro = <video autoPlay src='./Videos/CodeQuestIntro.mp4' placeholder=\"./images/axe.png\" style={{ width: '100%', height: '700px'}} ></video>\n  const [scene, setScene] = useState(welcome);\n\n\n  function emitReady(){\n    sceneCount++;\n    client.emit('ready', sceneCount);\n    alert('ready');\n  }\n\n  // function changeScene(){\n\n  //   if(count === 0){\n  //     count++;\n  //     let title = Scenarios.intro.name;\n  //     let intro = Scenarios.intro.dialogue;\n  //     return setScene(intro)\n  //   }\n  //   if(count === 1){\n  //     const scene1 = <video controls autoPlay src='./Videos/scene1.mp4' style={{ width: '100%', height: 'auto'}} ></video>\n  //     count++;\n  //    return setScene(scene1);\n  //   }\n  //   if(count === 2){\n  //     const scene2 = <video autoPlay src='./Videos/swamp.mp4' style={{ width: '100%', height: 'auto'}} ></video>\n  //     count++;\n  //     return setScene(scene2);\n  //   }\n  // }\n\n  \n\n  return (\n    <>\n        <section style={{ display:'grid', gridTemplateColumns: '4fr 1fr'}}>\n        <div id='sceneWindow' style={{ backgroundColor: 'black', width: '1250px', height: '700px', margin: 'auto', alignSelf: 'center'}}>\n        <div style={{ display: 'inline-block'}}>\n        {scene}\n        </div>\n        </div>\n        <Loot/>\n        </section>\n      <button  onClick={emitReady} style={{ display: 'block', margin: 'auto', marginTop: '10px'}} name=\"ready\">Next Scene</button>\n      <div style={{display: 'inline-block', margin: 'auto', marginLeft: '400px'}}>\n      <Scenes/>\n\n      </div>\n        <div style={{display: 'inline-block', margin: 'auto', marginLeft: '400px'}}>\n       <Chat/>\n\n        </div>\n\n    </>\n  );\n}\n\nexport default App;\n","/Users/michaeleclavea/Desktop/codeFellow/testSpace/gametest/src/Loot.js",["86","87","88","89","90","91","92","93","94"],"import React from 'react';\n\n\n\nfunction Loot(){\n\n    const styleLoot = {\n        borderRadius: '7px', \n        display: 'flex', \n        alignItems: 'center', \n        justifyContent: 'center'\n    }\n\n    const styleImg = {\n        height: '80px',\n        width: 'auto' \n    }\n\n\n\n    return(\n        <div id='loot-container'>\n        <section style={{ backgroundImage: 'url(./images/Loot.png)', backgroundSize: '100% 100%', padding: '2px 20px 2px 20px', height: '500px', width: '250px', margin: 'auto', backgroundRepeat: 'no-repeat', borderRadius: '7px', display: 'grid', gridTemplateColumns: '1fr 1fr', gridTemplateRows: '1fr 1fr 1fr 1fr', border: '1px solid black', backgroundColor: 'gray'}}>\n        <div style={styleLoot}><img style={styleImg} src='./images/icons/axe.png'></img></div>\n        <div style={styleLoot}><img style={styleImg} src='./images/icons/book.png'></img></div>\n        <div style={styleLoot}><img style={styleImg} src='./images/icons/gold.png'></img></div>\n        <div style={styleLoot}><img style={styleImg} src='./images/icons/potion.png'></img></div>\n        <div style={styleLoot}><img style={styleImg} src='./images/icons/sword.png'></img></div>\n        <div style={styleLoot}><img style={styleImg} src='./images/icons/dagger.png'></img></div>\n        <div style={styleLoot}><img style={styleImg} src='./images/icons/club.png'></img></div>\n        <div style={styleLoot}><img style={styleImg} src='./images/icons/bow.png'></img></div>        \n        </section>\n        </div>\n    )\n}\n\nexport default Loot;\n\n\n{/* <ul style={{ listStyle: 'none', margin: 'auto', padding: '0'}}>\n                <img src='./images/axe.png' style={{ height: '75px'}}></img>\n            </ul> */}\n\n            // <div style={{ borderRadius: '7px', display: 'flex', alignItems: 'center', justifyContent: 'center', border: '7px solid rgb(29.8, 29.8, 29.8)'}}>8</div>","/Users/michaeleclavea/Desktop/codeFellow/testSpace/gametest/src/Chat.js",[],"/Users/michaeleclavea/Desktop/codeFellow/testSpace/gametest/src/Scenes.js",["95"],"import React, { useState, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nconst client = io.connect('http://localhost:3001', {transports: ['websocket']});\nclient.on('connect', () => {\n  console.log('connected');\n});\n\nconst Scenes = () => {\n  const [scene, setScene] = useState([]);\n\n  \n    client.on('scenario', (scenario) => {\n      setScene([...scene, { name: scenario.name, message: scenario.dialogue }])\n      switch(scenario.type) {\n        case 'roll':\n          // code block\n          break;\n        case 'choice2':\n          // code block\n          break;\n        case 'choice3':\n          // code block\n          break;\n        case 'choice4':\n          // code block\n          break;\n        case 'riddle':\n          // code block\n          break;\n        case 'ready':\n\n          // code block\n          break;\n        case 'luck':\n          // code block\n          break;\n        default:\n          // code block\n      }\n    });\n\n    \n\n  const renderScene = () => {\n    return scene.map(({ name, message }, index) => (\n      <div key={index}>\n        <h3 style={{display: 'block', textAlign: 'center', textDecoration: 'underline'}}>\n          {name}\n        </h3>\n        <span style={{ width: '650px', height: 'auto'}}>{message}</span>\n      </div>\n    ))\n  }\n\n\n  return (\n\n      <div id=\"chat-window\" style={{ backgroundColor: 'lightgray', borderRadius: '10px', fontSize: '1.7em', color: 'black', display: 'inline-block', width: '750px', minHeight: '500px', height: 'auto', border: '6px solid black', padding: '5px 10px 10px 10px'}}>\n        {renderScene()}\n      </div>\n\n  )\n}\n\nexport default Scenes;",["96","97"],"/Users/michaeleclavea/Desktop/codeFellow/code401/testSpace/gametest/src/index.js",[],["98","99"],"/Users/michaeleclavea/Desktop/codeFellow/code401/testSpace/gametest/src/App.js",["100"],"/Users/michaeleclavea/Desktop/codeFellow/code401/testSpace/gametest/src/screens/JoinScreen.js",["101"],"import React, { useState, useEffect } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button'\nimport socket from '../components/connect.js';\nconst JoinScreen = () => {\n  const[state, setState] = useState('')\n  const onTextChange = e => {\n    setState(e.target.value);\n  }\n  const createGameHandler = (e) => {\n    e.preventDefault();\n    socket.emit('join game', state);\n  }\n  \n  return (\n    <div>\n      <Card style={{ width: '30rem' }}>\n        <Card.Img variant=\"top\" src=\"holder.js/100px180\" />\n        <Card.Body>\n          <Card.Title>Join a new game</Card.Title>\n          <Form onSubmit={createGameHandler}>\n            <Form.Group>\n              <Form.Label>Enter your game code</Form.Label>\n              <Form.Control type=\"text\" placeholder=\"name\" onChange={(e) => onTextChange(e)}/>\n            </Form.Group>\n            <Button variant=\"primary\" type=\"submit\">\n              Submit\n            </Button>\n          </Form>\n        </Card.Body>\n      </Card>\n    </div>\n  )\n}\nexport default JoinScreen\n\n\n\n\n\n","/Users/michaeleclavea/Desktop/codeFellow/code401/testSpace/gametest/src/screens/WelcomeScreen.js",[],"/Users/michaeleclavea/Desktop/codeFellow/code401/testSpace/gametest/src/screens/CreateScreen.js",["102"],"import React, { useState, useEffect } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button'\nimport socket from '../components/connect.js';\nconst CreateScreen = () => {\n  const[state, setState] = useState('')\n  const onTextChange = e => {\n    setState(e.target.value);\n  }\n  const createGameHandler = (e) => {\n    e.preventDefault();\n    socket.emit('create game', state);\n  }\n  \n  return (\n    <div>\n      <Card style={{ width: '30rem' }}>\n        <Card.Img variant=\"top\" src=\"holder.js/100px180\" />\n        <Card.Body>\n          <Card.Title>Start a new game</Card.Title>\n          <Form onSubmit={createGameHandler}>\n            <Form.Group>\n              <Form.Label>Enter a name for your game</Form.Label>\n              <Form.Control type=\"text\" placeholder=\"name\" onChange={(e) => onTextChange(e)}/>\n            </Form.Group>\n            <Button variant=\"primary\" type=\"submit\">\n              Submit\n            </Button>\n          </Form>\n        </Card.Body>\n      </Card>\n    </div>\n  )\n}\nexport default CreateScreen","/Users/michaeleclavea/Desktop/codeFellow/code401/testSpace/gametest/src/screens/GameScreen.js",["103","104","105"],"\nimport '../App.css';\nimport React, {useState, useEffect} from 'react';\nimport SceneVideo from '../components/SceneVideo.js';\nimport Loot from '../components/Loot.js';\nimport Dialogue from '../components/Dialogue.js';\nimport Chat from '../components/Chat.js';\nimport client from '../components/connect.js';\n\nlet count = 0; \nlet sceneCount = 0;\n\n\n\nfunction GameScreen() {\n  const welcome = <h1 style={{ color: 'gray'}}>Click next to start the game!</h1>\n  const [scene, setScene] = useState(welcome);\n\n  client.on('scenario', (scenario) => {\n    setScene([{ video: scenario.video }])\n    switch(scenario.type) {\n      case 'roll':\n        // code block\n        break;\n      case 'choice2':\n        // code block\n        break;\n      case 'choice3':\n        // code block\n        break;\n      case 'choice4':\n        // code block\n        break;\n      case 'riddle':\n        // code block\n        break;\n      case 'ready':\n\n        // code block\n        break;\n      case 'luck':\n        // code block\n        break;\n      default:\n        // code block\n    }\n  });\n\n  function emitReady(){\n    sceneCount++;\n    client.emit('ready', sceneCount);\n    alert('ready');\n  }\n\n  \n\n  return (\n    <>\n      <div style={{  display: 'block', textAlign: 'center'}}>\n      <div id='sceneWindow' style={{ display: 'inline-block', backgroundColor: 'black', width: '1250px', height: 'auto', margin: 'auto'}}>\n      <SceneVideo client={client}/>\n      </div>\n      <div style={{ display: 'inline-block', paddingLeft: '20px'}}>\n      <Loot />\n      </div>\n      </div>\n      <button  onClick={emitReady} style={{ display: 'block', margin: 'auto', marginTop: '10px'}} name=\"ready\">Next Scene</button>\n      <section style={{ display: 'grid', gridTemplateRows: '1fr', gridTemplateColumns: '1fr 1fr', margin: 'auto'}}>\n      <div style={{ textAlign: 'right'}}><Dialogue client={client}/></div>\n      <div style={{ marginLeft: '0', paddingLeft: '50px'}}><Chat client={client}/></div>\n      </section>\n    </>\n  );\n}\n\nexport default GameScreen;\n","/Users/michaeleclavea/Desktop/codeFellow/code401/testSpace/gametest/src/components/connect.js",[],"/Users/michaeleclavea/Desktop/codeFellow/code401/testSpace/gametest/src/components/Loot.js",["106","107","108","109","110","111","112","113"],"import React from 'react';\n\n\n\nfunction Loot(){\n\n    const styleLoot = {\n        borderRadius: '7px', \n        display: 'flex', \n        alignItems: 'center', \n        justifyContent: 'center'\n    }\n\n    const styleImg = {\n        height: '80px',\n        width: 'auto' \n    }\n\n\n\n    return(\n        <div id='loot-container' style={{display: 'inline-block', float: 'right'}}>\n        <section style={{ backgroundImage: 'url(./images/Loot.png)', backgroundSize: '100% 100%', padding: '2px 20px 2px 20px', height: '500px', width: '250px', margin: 'auto', backgroundRepeat: 'no-repeat', borderRadius: '7px', display: 'grid', gridTemplateColumns: '1fr 1fr', gridTemplateRows: '1fr 1fr 1fr 1fr', border: '1px solid black', backgroundColor: 'gray'}}>\n        <div style={styleLoot}><img style={styleImg} src='./images/icons/axe.png'></img></div>\n        <div style={styleLoot}><img style={styleImg} src='./images/icons/book.png'></img></div>\n        <div style={styleLoot}><img style={styleImg} src='./images/icons/gold.png'></img></div>\n        <div style={styleLoot}><img style={styleImg} src='./images/icons/potion.png'></img></div>\n        <div style={styleLoot}><img style={styleImg} src='./images/icons/sword.png'></img></div>\n        <div style={styleLoot}><img style={styleImg} src='./images/icons/dagger.png'></img></div>\n        <div style={styleLoot}><img style={styleImg} src='./images/icons/club.png'></img></div>\n        <div style={styleLoot}><img style={styleImg} src='./images/icons/bow.png'></img></div>        \n        </section>\n        </div>\n    )\n}\n\nexport default Loot;\n\n\n","/Users/michaeleclavea/Desktop/codeFellow/code401/testSpace/gametest/src/components/SceneVideo.js",["114","115","116"],"import React, { useState, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nconst SceneVideo = (props) => {\n  const client = props.client;\n  const [scene, setScene] = useState([]);\n\n  \n    client.on('scenario', (scenario) => {\n      setScene([{ video: scenario.video }])\n      switch(scenario.type) {\n        case 'roll':\n          // code block\n          break;\n        case 'choice2':\n          // code block\n          break;\n        case 'choice3':\n          // code block\n          break;\n        case 'choice4':\n          // code block\n          break;\n        case 'riddle':\n          // code block\n          break;\n        case 'ready':\n          // code block\n          break;\n        case 'luck':\n          // code block\n          break;\n        default:\n          // code block\n      }\n    });\n\n    \n\n  const renderSceneVideo = () => {\n    return scene.map(({ video }, index) => ( \n     <iframe autoPlay src={video} key={index} style={{ width: '1250px', height: '750px', border: 'none'}} controls></iframe>\n    ))\n  }\n\n\n\n  return (\n\n      <div id=\"video-window\" >\n        {renderSceneVideo()}\n      </div>\n\n  )\n}\n\nexport default SceneVideo;","/Users/michaeleclavea/Desktop/codeFellow/code401/testSpace/gametest/src/components/Chat.js",["117"],"import React, { useState, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Form from 'react-bootstrap/Form'\n\n\n\n\nconst Chat = (props) => {\n  const client = props.client;\n  const [state, setState] = useState({message: '', name: ''});\n  const [chat, setChat] = useState([]);\n\n\n  useEffect(() => {\n    client.on('chat', ({name, message}) => {\n      setChat([...chat, { name, message }])\n    })\n    \n    client.on('result', payload => {\n      setChat([...payload, { name: payload.name, message: payload.dialogue }])\n      // do ready check, serve payload.num\n    })\n  })\n\n  const onTextChange = e => {\n    setState({...state, [e.target.name]: e.target.value})\n  }\n\n  const onMessageSubmit = (e) => {\n    e.preventDefault();\n    const { message, name } = state;\n    console.log(name, message);\n    client.emit('chat', {name, message});\n    setState({ message: '', name });\n  }\n\n  const renderChat = () => {\n    return chat.map(({ name, message }, index) => (\n      <div key={index}>\n        <h3 style={{fontSize: '1.6em'}}>\n        <strong>{name}:</strong> <span>{message}</span>\n        </h3>\n        <p style={{fontSize: '10px'}}>_____________________________________</p>\n      </div>\n    ))\n  }\n\n  return (\n    <div id=\"mario-chat\" style={{backgroundImage: 'url(./images/scrolly.png)', backgroundAttachment: 'scroll', backgroundRepeat: 'no-repeat', backgroundSize: 'cover', width: '550px', marginRight: '0'}} >\n      <h2 style={{ fontSize: '2em', width: '300px', paddingLeft: '35px', paddingTop: '100px', margin: 'auto', textDecoration: 'underline', fontFamily: 'fantasy'}}><strong>Kingdom chat</strong></h2>\n      <div id=\"chat-window\" style={{ paddingTop: '5px', width: '520px', minHeight: '260px', height: 'auto', padding: '30px 0 30px 30px'}}>\n        {renderChat()}\n      </div>\n      <Form onSubmit={onMessageSubmit}>\n      <Form.Label style={{ fontSize: '1.4em', paddingLeft: '50px'}}><strong>Player Name:</strong></Form.Label>\n        <input style={{backgroundColor: 'rgba(199, 199, 199, 0)', borderRadius: '7px', fontSize: '1.4em', marginLeft: '5px'}} size=\"lg\" id=\"name\" name=\"name\" type=\"text\" placeholder=\"Name...\" onChange={(e) => onTextChange(e)}/>\n        <p />\n        <Form.Label style={{ fontSize: '1.4em', paddingLeft: '50px'}}><strong>Type Message:</strong></Form.Label>\n        <input style={{backgroundColor: 'rgba(199, 199, 199, 0)', borderRadius: '7px', fontSize: '1.4em', marginLeft: '5px', marginBottom: '15px'}} id=\"message\" name=\"message\" type=\"text\" placeholder=\"Message...\" onChange={(e) => onTextChange(e)}/>\n        <p/>\n        <button id=\"send\" type=\"submit\" style={{ color: 'white', boxShadow: '5px 5px 10px black', backgroundColor: '#595959', marginLeft: '45%', padding: '10px 15px', marginBottom: '35px', borderRadius: '10px'}}>Send</button>\n      </Form>\n      <p/>\n    </div>\n  )\n}\n\nexport default Chat;\n\n","/Users/michaeleclavea/Desktop/codeFellow/code401/testSpace/gametest/src/components/Dialogue.js",["118","119"],"import React, { useState, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n\n\nconst Dialogue = (props) => {\n  const client = props.client;\n  const [scene, setScene] = useState([]);\n\n  \n    client.on('scenario', (scenario) => {\n      setScene([{ name: scenario.name, message: scenario.dialogue }])\n      switch(scenario.type) {\n        case 'roll':\n          // code block\n          break;\n        case 'choice2':\n          // code block\n          break;\n        case 'choice3':\n          // code block\n          break;\n        case 'choice4':\n          // code block\n          break;\n        case 'riddle':\n          // code block\n          break;\n        case 'ready':\n\n          // code block\n          break;\n        case 'luck':\n          // code block\n          break;\n        default:\n          // code block\n      }\n    });\n\n    \n\n  const renderScene = () => {\n    return scene.map(({ name, message }, index) => (\n      <div key={index} style={{ display: 'flex', flexDirection: 'column'}}>\n        <h3 style={{ width: '400px', marginLeft: 'auto', marginRight: 'auto', fontSize: '1em', paddingTop: '35px', textAlign: 'center', fontFamily: 'fantasy'}}>\n          {name}\n        </h3>\n        <div style={{ padding: '15px 30px 0px 30px', objectFit: 'contain', fontSize: '1em', textAlign: 'left'}}>\n        {message}\n        </div>\n\n      </div>\n    ))\n  }\n\n\n\n  return (\n\n      <div id=\"dialogue-window\" style={{ backgroundImage: 'url(./images/textBox/text2.png)', backgroundSize: '100% 100%', borderRadius: '10px', fontSize: '1.7em', color: 'black', display: 'inline-block', width: '778px', minHeight: '510px', height: 'auto', border: '6px solid black', padding: '5px 10px 10px 10px'}}>\n        {renderScene()}``\n      </div>\n\n  )\n}\n\nexport default Dialogue;",{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":3,"column":26,"nodeType":"126","messageId":"127","endLine":3,"endColumn":35},{"ruleId":"124","severity":1,"message":"128","line":7,"column":14,"nodeType":"126","messageId":"127","endLine":7,"endColumn":20},{"ruleId":"124","severity":1,"message":"129","line":14,"column":5,"nodeType":"126","messageId":"127","endLine":14,"endColumn":10},{"ruleId":"124","severity":1,"message":"130","line":22,"column":17,"nodeType":"126","messageId":"127","endLine":22,"endColumn":25},{"ruleId":"131","severity":1,"message":"132","line":24,"column":32,"nodeType":"133","endLine":24,"endColumn":83},{"ruleId":"131","severity":1,"message":"132","line":25,"column":32,"nodeType":"133","endLine":25,"endColumn":84},{"ruleId":"131","severity":1,"message":"132","line":26,"column":32,"nodeType":"133","endLine":26,"endColumn":84},{"ruleId":"131","severity":1,"message":"132","line":27,"column":32,"nodeType":"133","endLine":27,"endColumn":86},{"ruleId":"131","severity":1,"message":"132","line":28,"column":32,"nodeType":"133","endLine":28,"endColumn":85},{"ruleId":"131","severity":1,"message":"132","line":29,"column":32,"nodeType":"133","endLine":29,"endColumn":86},{"ruleId":"131","severity":1,"message":"132","line":30,"column":32,"nodeType":"133","endLine":30,"endColumn":84},{"ruleId":"131","severity":1,"message":"132","line":31,"column":32,"nodeType":"133","endLine":31,"endColumn":83},{"ruleId":"134","severity":1,"message":"135","line":40,"column":1,"nodeType":"136","messageId":"137","endLine":42,"endColumn":22},{"ruleId":"124","severity":1,"message":"125","line":1,"column":27,"nodeType":"126","messageId":"127","endLine":1,"endColumn":36},{"ruleId":"120","replacedBy":"138"},{"ruleId":"122","replacedBy":"139"},{"ruleId":"120","replacedBy":"140"},{"ruleId":"122","replacedBy":"141"},{"ruleId":"124","severity":1,"message":"142","line":6,"column":8,"nodeType":"126","messageId":"127","endLine":6,"endColumn":18},{"ruleId":"124","severity":1,"message":"125","line":1,"column":27,"nodeType":"126","messageId":"127","endLine":1,"endColumn":36},{"ruleId":"124","severity":1,"message":"125","line":1,"column":27,"nodeType":"126","messageId":"127","endLine":1,"endColumn":36},{"ruleId":"124","severity":1,"message":"125","line":3,"column":26,"nodeType":"126","messageId":"127","endLine":3,"endColumn":35},{"ruleId":"124","severity":1,"message":"129","line":10,"column":5,"nodeType":"126","messageId":"127","endLine":10,"endColumn":10},{"ruleId":"124","severity":1,"message":"143","line":17,"column":10,"nodeType":"126","messageId":"127","endLine":17,"endColumn":15},{"ruleId":"131","severity":1,"message":"132","line":24,"column":32,"nodeType":"133","endLine":24,"endColumn":83},{"ruleId":"131","severity":1,"message":"132","line":25,"column":32,"nodeType":"133","endLine":25,"endColumn":84},{"ruleId":"131","severity":1,"message":"132","line":26,"column":32,"nodeType":"133","endLine":26,"endColumn":84},{"ruleId":"131","severity":1,"message":"132","line":27,"column":32,"nodeType":"133","endLine":27,"endColumn":86},{"ruleId":"131","severity":1,"message":"132","line":28,"column":32,"nodeType":"133","endLine":28,"endColumn":85},{"ruleId":"131","severity":1,"message":"132","line":29,"column":32,"nodeType":"133","endLine":29,"endColumn":86},{"ruleId":"131","severity":1,"message":"132","line":30,"column":32,"nodeType":"133","endLine":30,"endColumn":84},{"ruleId":"131","severity":1,"message":"132","line":31,"column":32,"nodeType":"133","endLine":31,"endColumn":83},{"ruleId":"124","severity":1,"message":"125","line":1,"column":27,"nodeType":"126","messageId":"127","endLine":1,"endColumn":36},{"ruleId":"124","severity":1,"message":"144","line":2,"column":10,"nodeType":"126","messageId":"127","endLine":2,"endColumn":12},{"ruleId":"145","severity":1,"message":"146","line":44,"column":6,"nodeType":"133","endLine":44,"endColumn":116},{"ruleId":"124","severity":1,"message":"144","line":2,"column":10,"nodeType":"126","messageId":"127","endLine":2,"endColumn":12},{"ruleId":"124","severity":1,"message":"125","line":1,"column":27,"nodeType":"126","messageId":"127","endLine":1,"endColumn":36},{"ruleId":"124","severity":1,"message":"144","line":2,"column":10,"nodeType":"126","messageId":"127","endLine":2,"endColumn":12},"no-native-reassign",["147"],"no-negated-in-lhs",["148"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Socket' is defined but never used.","'count' is assigned a value but never used.","'setScene' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock",["147"],["148"],["147"],["148"],"'GameScreen' is defined but never used.","'scene' is assigned a value but never used.","'io' is defined but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","no-global-assign","no-unsafe-negation"]