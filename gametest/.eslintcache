[{"/Users/sararussert/codefellows/401/testSpace/gametest/src/index.js":"1","/Users/sararussert/codefellows/401/testSpace/gametest/src/App.js":"2","/Users/sararussert/codefellows/401/testSpace/gametest/src/screens/GameScreen.js":"3","/Users/sararussert/codefellows/401/testSpace/gametest/src/screens/WelcomeScreen.js":"4","/Users/sararussert/codefellows/401/testSpace/gametest/src/screens/CreateScreen.js":"5","/Users/sararussert/codefellows/401/testSpace/gametest/src/screens/JoinScreen.js":"6","/Users/sararussert/codefellows/401/testSpace/gametest/src/components/Loot.js":"7","/Users/sararussert/codefellows/401/testSpace/gametest/src/components/connect.js":"8","/Users/sararussert/codefellows/401/testSpace/gametest/src/components/Chat.js":"9","/Users/sararussert/codefellows/401/testSpace/gametest/src/components/SceneVideo.js":"10","/Users/sararussert/codefellows/401/testSpace/gametest/src/components/Dialogue.js":"11","/Users/sararussert/codefellows/401/testSpace/gametest/src/components/GameButtons.js":"12","/Users/sararussert/codefellows/401/testSpace/gametest/src/components/Roll.js":"13","/Users/sararussert/codefellows/401/testSpace/gametest/src/components/Choice2.js":"14","/Users/sararussert/codefellows/401/testSpace/gametest/src/components/Ready.js":"15","/Users/sararussert/codefellows/401/testSpace/gametest/src/components/Choice3.js":"16","/Users/sararussert/codefellows/401/testSpace/gametest/src/components/Luck.js":"17","/Users/sararussert/codefellows/401/testSpace/gametest/src/components/Choice4.js":"18","/Users/sararussert/codefellows/401/testSpace/gametest/src/components/Riddle.js":"19","/Users/sararussert/codefellows/401/testSpace/gametest/src/components/Start.js":"20"},{"size":222,"mtime":1608245884765,"results":"21","hashOfConfig":"22"},{"size":674,"mtime":1608251926335,"results":"23","hashOfConfig":"22"},{"size":1787,"mtime":1608321906554,"results":"24","hashOfConfig":"22"},{"size":1545,"mtime":1608317143994,"results":"25","hashOfConfig":"22"},{"size":7165,"mtime":1608317143991,"results":"26","hashOfConfig":"22"},{"size":7165,"mtime":1608318371075,"results":"27","hashOfConfig":"22"},{"size":1588,"mtime":1608245884758,"results":"28","hashOfConfig":"22"},{"size":199,"mtime":1608245884759,"results":"29","hashOfConfig":"22"},{"size":2923,"mtime":1608317143986,"results":"30","hashOfConfig":"22"},{"size":1214,"mtime":1608245884759,"results":"31","hashOfConfig":"22"},{"size":1254,"mtime":1608322197172,"results":"32","hashOfConfig":"22"},{"size":1204,"mtime":1608319543956,"results":"33","hashOfConfig":"22"},{"size":470,"mtime":1608317143991,"results":"34","hashOfConfig":"22"},{"size":577,"mtime":1608317143987,"results":"35","hashOfConfig":"22"},{"size":353,"mtime":1608321515312,"results":"36","hashOfConfig":"22"},{"size":649,"mtime":1608317143987,"results":"37","hashOfConfig":"22"},{"size":549,"mtime":1608317143990,"results":"38","hashOfConfig":"22"},{"size":764,"mtime":1608317143988,"results":"39","hashOfConfig":"22"},{"size":460,"mtime":1608317143991,"results":"40","hashOfConfig":"22"},{"size":395,"mtime":1608319536761,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1t0zvlz",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"/Users/sararussert/codefellows/401/testSpace/gametest/src/index.js",[],["90","91"],"/Users/sararussert/codefellows/401/testSpace/gametest/src/App.js",[],"/Users/sararussert/codefellows/401/testSpace/gametest/src/screens/GameScreen.js",["92","93","94"],"\nimport '../App.css';\nimport React, {useState, useEffect} from 'react';\nimport SceneVideo from '../components/SceneVideo.js';\nimport Loot from '../components/Loot.js';\nimport Dialogue from '../components/Dialogue.js';\nimport Chat from '../components/Chat.js';\nimport client from '../components/connect.js';\nimport GameButtons from '../components/GameButtons';\n\n\nfunction GameScreen() {\n  const [scenarioState, setScenarioState] = useState({})\n\n  useEffect(() => {\n    client.on('scenario', (scenario) => {\n      setScenarioState(scenario);\n    });\n    client.on('result', result => {\n      result.type = 'ready';\n      setScenarioState(result);\n    })\n    \n  })\n\n  // refactor passing client as props. Call it as an import\n  // import client from '../components/connect.js';\n\n  return (\n    <>\n      {/* <div style={{  display: 'block', textAlign: 'center'}}>\n        <div id='sceneWindow' style={{ display: 'inline-block', backgroundColor: 'black', width: '1250px', height: 'auto', margin: 'auto'}}>\n          <SceneVideo client={client}/>\n        </div>\n        <div style={{ display: 'inline-block', paddingLeft: '20px'}}>\n          <Loot />\n        </div>\n      </div> */}\n      <GameButtons scenario={scenarioState} />\n      {/* <button  onClick={emitReady} style={{ display: 'block', margin: 'auto', marginTop: '10px'}} name=\"ready\">Next Scene</button> */}\n      {/* <section style={{ display: 'grid', gridTemplateRows: '1fr', gridTemplateColumns: '1fr 1fr', margin: 'auto'}}> */}\n        <div style={{ textAlign: 'right'}}>\n          <Dialogue scenario={scenarioState}/>\n        </div>\n        {/* <div style={{ marginLeft: '0', paddingLeft: '50px'}}>\n          <Chat client={client}/>\n        </div> */}\n      {/* </section> */}\n      \n    </>\n  );\n}\n\nexport default GameScreen;\n","/Users/sararussert/codefellows/401/testSpace/gametest/src/screens/WelcomeScreen.js",[],"/Users/sararussert/codefellows/401/testSpace/gametest/src/screens/CreateScreen.js",[],"/Users/sararussert/codefellows/401/testSpace/gametest/src/screens/JoinScreen.js",["95"],"import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Card from 'react-bootstrap/Card';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button'\nimport socket from '../components/connect.js';\n\n\n\nconst styleShow = {\n  margin: 'auto', \n  backgroundImage: 'url(./images/scroll.png)', \n  backgroundSize: '100% 100%', \n  borderRadius: '10px', \n  fontSize: '1.7em', \n  color: 'black', \n  display: 'inline-block', \n  width: '935px', \n  minHeight: '610px', \n  height: 'auto', \n  padding: '5px 10px 10px 10px',\n}\nconst styleHide = {\n  display: 'none'\n}\nlet characterPicked = null;\n\nconst JoinScreen = () => {\n  const[state, setState] = useState('');\n  const [gameData, setGameData] = useState('');\n  const [charInfo, setCharInfo] = useState({ char: '', name: ''});\n  const [startTheme, setStartTheme] = useState(styleShow);\n  const [charTheme, setCharTheme] = useState(styleHide);\n  const [gameTheme, setGameTheme] = useState(styleHide);\n  const [nameTheme, setNameTheme] = useState(styleHide);\n\n  // ------------ CHANGE THEMES/ SHOW SELECTED FORMS ------------- //\n\n  const changeTheme = () =>{\n    setStartTheme(styleHide);\n    setCharTheme(styleShow);\n  }\n\n  const showGameLink = () =>{\n    setNameTheme(styleHide);\n    setGameTheme(styleShow);\n  }\n\n  //-------------- CHOSEN CHARACTER FUNCTION ---------- //\n\n  const chosenCharacter = (e) =>{\n    e.preventDefault();\n    setCharInfo({...charInfo, [e.target.name]: e.target.alt}) \n    if(e.target.alt === 'hunter'){\n      setCharTheme(styleHide);\n      setNameTheme(styleShow);\n       characterPicked = <img src='./images/Hunter.png' style={{height: '150px', marginTop: '110px'}} name=\"char\" alt=\"hunter\"/>;\n      return characterPicked;\n    }\n    if(e.target.alt === 'assassin'){\n      setCharTheme(styleHide);\n      setNameTheme(styleShow);\n      characterPicked = <img src='./images/Assassin.png' style={{height: '120px', marginTop: '131px'}} name=\"char\" alt=\"assassin\" />;\n      return characterPicked;\n    }\n    if(e.target.alt === 'wizard'){\n      setCharTheme(styleHide);\n      setNameTheme(styleShow);\n      characterPicked = <img src='./images/Wizard.png' style={{height: '150px', marginTop: '110px'}} name=\"char\" alt=\"wizard\"/>;\n      return characterPicked;\n    }\n    if(e.target.alt === 'warrior'){\n      setCharTheme(styleHide);\n      setNameTheme(styleShow);\n      characterPicked = <img src='./images/Warrior.png' style={{height: '150px', paddingRight: '10px', marginTop: '110px'}} name=\"char\" alt=\"warrior\" />;\n      return characterPicked;\n    }\n    else{\n      return alert('error in character picked function')\n    }\n  }\n\n\n  const onTextChange = (e) => {\n    setState(e.target.value);\n    console.log(state)\n  }\n  const createGameHandler = (e) => {\n    e.preventDefault();\n    socket.emit('join game', state);\n    changeTheme();\n  }\n  \n  const onNameChange = (e) => {\n    e.preventDefault();\n    setCharInfo({...charInfo, [e.target.name]: e.target.value}) \n    console.log(charInfo.name, charInfo.char);\n  }\n  const submitChar = (e) => {\n    e.preventDefault();\n    console.log(charInfo)\n    socket.emit('start game', charInfo);\n  }\n  \n  useEffect(() => {\n    socket.on('choose character', game => {\n      setGameData(game);\n    })\n    \n  })\n  \n  return (\n    <div style={{background: 'none', marginTop: '350px', textAlign: 'center'}}>\n      <div style={startTheme}>\n      <Card.Body style={{ marginLeft: '70px', marginTop: '100px', width: '750px'}}>\n      <Card.Title style={{ fontSize: '1.5em', fontWeight: 'bolder', fontFamily: 'cursive'}}>JOIN A NEW GAME</Card.Title>\n          <Form onSubmit={createGameHandler}>\n            <Form.Group>\n              <Form.Label>Enter your game code</Form.Label>\n              <p></p>\n              <Form.Control style={{width: '40%', margin: 'auto'}} type=\"text\" placeholder=\"name...\" onChange={(e) => onTextChange(e)}/>\n            </Form.Group>\n            <button style={{ color: 'white', boxShadow: '5px 5px 10px black', backgroundColor: '#595959', borderRadius: '10px' , fontSize: '1em'}} type=\"submit\">Submit</button>\n          </Form>\n        </Card.Body>\n      </div>\n\n      <div style={charTheme}>\n        <Card.Title style={{ fontSize: '1.5em', fontWeight: 'bolder', fontFamily: 'cursive', marginTop: '150px'}}>CHOOSE YOUR CHARACTER</Card.Title>\n        <br></br>\n          <button style={{ cursor: 'pointer', backgroundColor: 'transparent', border: 'none', marginRight: '30px'}} onClick={chosenCharacter}> <img src='./images/Hunter.png' style={{height: '150px'}} name=\"char\" alt=\"hunter\"/><p style={{cursor: 'no-drop'}}>Hunter</p></button>\n          <button style={{ cursor: 'pointer', backgroundColor: 'transparent', border: 'none', marginRight: '30px'}} onClick={chosenCharacter}> <img src='./images/Assassin.png' style={{height: '150px'}} name=\"char\" alt=\"assassin\" /><p style={{cursor: 'no-drop'}}>Assassin</p></button>\n          <button style={{ cursor: 'pointer', backgroundColor: 'transparent', border: 'none', marginRight: '30px'}} onClick={chosenCharacter}> <img src='./images/Wizard.png' style={{height: '120px', marginTop: '30px'}} name=\"char\" alt=\"wizard\"/><p style={{cursor: 'no-drop'}}>Wizard</p></button>\n          <button style={{ cursor: 'pointer', backgroundColor: 'transparent', border: 'none', marginRight: '30px'}} onClick={chosenCharacter}> <img src='./images/Warrior.png' style={{height: '150px', paddingRight: '10px'}} name=\"char\" alt=\"warrior\" /><p style={{cursor: 'no-drop'}}>Warrior</p></button>\n          {/* <p style={{ color: 'gray'}}>__________</p> */}\n      </div>\n\n      <div style={nameTheme}>\n      <div>{characterPicked}</div>\n      <h3>{charInfo.char}: {charInfo.name} </h3>\n        <Card.Title style={{ fontSize: '1.5em', fontWeight: 'bolder', fontFamily: 'cursive'}}>Type Your Character Name</Card.Title>   \n          <Form onSubmit={submitChar}>\n          <Form.Control style={{width: '40%', margin: '40px auto 10px auto'}} type=\"text\" placeholder=\"name\" name=\"name\" onChange={(e) => onNameChange(e)}/>\n          {/* <Form.Control style={{width: '40%', margin: '10px auto 10px auto'}} type=\"text\" placeholder=\"role\" name=\"char\" onChange={(e) => onNameChange(e)}/> */}\n          <button style={{ color: 'white', boxShadow: '5px 5px 10px black', backgroundColor: '#595959', borderRadius: '10px' , fontSize: '1em'}} type=\"submit\" onClick={showGameLink}>Submit</button>\n        </Form>\n      </div>\n\n\n      <div style={gameTheme}>\n        <div style={{ margin: '0'}}>{characterPicked}</div>\n        <h3>{charInfo.char}:  {charInfo.name}</h3>\n        <h1 style={{ paddingBottom: '30px', fontSize: '1.5em', fontWeight: 'bolder', fontFamily: 'cursive', marginTop: '30px'}}>Start Your Quest</h1>\n        <Link to='/game'>\n        <Card.Title style={{ fontSize: '1.3em', fontWeight: 'bolder', fontFamily: 'cursive', color: 'black' }}>Share your game code with 3 friends: {gameData}</Card.Title>\n        <button type=\"submit\" style={{ color: 'white', boxShadow: '5px 5px 10px black', backgroundColor: '#595959', borderRadius: '10px' , fontSize: '1em'}}>Start</button>\n        </Link>\n      </div>\n\n    </div>\n  )\n}\nexport default JoinScreen\n\n\n\n\n\n","/Users/sararussert/codefellows/401/testSpace/gametest/src/components/Loot.js",["96","97","98","99","100","101","102","103"],"import React from 'react';\n\n\n\nfunction Loot(){\n\n    const styleLoot = {\n        borderRadius: '7px', \n        display: 'flex', \n        alignItems: 'center', \n        justifyContent: 'center'\n    }\n\n    const styleImg = {\n        height: '80px',\n        width: 'auto' \n    }\n\n\n\n    return(\n        <div id='loot-container' style={{display: 'inline-block', float: 'right'}}>\n        <section style={{ backgroundImage: 'url(./images/Loot.png)', backgroundSize: '100% 100%', padding: '2px 20px 2px 20px', height: '500px', width: '250px', margin: 'auto', backgroundRepeat: 'no-repeat', borderRadius: '7px', display: 'grid', gridTemplateColumns: '1fr 1fr', gridTemplateRows: '1fr 1fr 1fr 1fr', border: '1px solid black', backgroundColor: 'gray'}}>\n        <div style={styleLoot}><img style={styleImg} src='./images/icons/axe.png'></img></div>\n        <div style={styleLoot}><img style={styleImg} src='./images/icons/book.png'></img></div>\n        <div style={styleLoot}><img style={styleImg} src='./images/icons/gold.png'></img></div>\n        <div style={styleLoot}><img style={styleImg} src='./images/icons/potion.png'></img></div>\n        <div style={styleLoot}><img style={styleImg} src='./images/icons/sword.png'></img></div>\n        <div style={styleLoot}><img style={styleImg} src='./images/icons/dagger.png'></img></div>\n        <div style={styleLoot}><img style={styleImg} src='./images/icons/club.png'></img></div>\n        <div style={styleLoot}><img style={styleImg} src='./images/icons/bow.png'></img></div>        \n        </section>\n        </div>\n    )\n}\n\nexport default Loot;\n\n\n","/Users/sararussert/codefellows/401/testSpace/gametest/src/components/connect.js",[],"/Users/sararussert/codefellows/401/testSpace/gametest/src/components/Chat.js",["104"],"import React, { useState, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Form from 'react-bootstrap/Form'\n\n\n\n\nconst Chat = (props) => {\n  const client = props.client;\n  const [state, setState] = useState({message: '', name: ''});\n  const [chat, setChat] = useState([]);\n\n\n  useEffect(() => {\n    client.on('chat', ({name, message}) => {\n      setChat([...chat, { name, message }])\n    })\n    \n    // client.on('result', payload => {\n    //   setChat([...payload, { name: payload.name, message: payload.dialogue }])\n    //   // do ready check, serve payload.num\n    // })\n  })\n\n  const onTextChange = e => {\n    setState({...state, [e.target.name]: e.target.value})\n  }\n\n  const onMessageSubmit = (e) => {\n    e.preventDefault();\n    const { message, name } = state;\n    console.log(name, message);\n    client.emit('chat', {name, message});\n    setState({ message: '', name });\n  }\n\n  const renderChat = () => {\n    return chat.map(({ name, message }, index) => (\n      <div key={index}>\n        <h3 style={{fontSize: '1.6em'}}>\n        <strong>{name}:</strong> <span>{message}</span>\n        </h3>\n        <p style={{fontSize: '10px'}}>_____________________________________</p>\n      </div>\n    ))\n  }\n\n  return (\n    <div id=\"mario-chat\" style={{backgroundImage: 'url(./images/scrolly.png)', backgroundAttachment: 'scroll', backgroundRepeat: 'no-repeat', backgroundSize: 'cover', width: '550px', marginRight: '0'}} >\n      <h2 style={{ fontSize: '2em', width: '300px', paddingLeft: '35px', paddingTop: '100px', margin: 'auto', textDecoration: 'underline', fontFamily: 'fantasy'}}><strong>Kingdom chat</strong></h2>\n      <div id=\"chat-window\" style={{ paddingTop: '5px', width: '520px', minHeight: '260px', height: 'auto', padding: '30px 0 30px 30px'}}>\n        {renderChat()}\n      </div>\n      <Form onSubmit={onMessageSubmit}>\n      <Form.Label style={{ fontSize: '1.4em', paddingLeft: '50px'}}><strong>Player Name:</strong></Form.Label>\n        <input style={{backgroundColor: 'rgba(199, 199, 199, 0)', borderRadius: '7px', fontSize: '1.4em', marginLeft: '5px'}} size=\"lg\" id=\"name\" name=\"name\" type=\"text\" placeholder=\"Name...\" onChange={(e) => onTextChange(e)}/>\n        <p />\n        <Form.Label style={{ fontSize: '1.4em', paddingLeft: '50px'}}><strong>Type Message:</strong></Form.Label>\n        <input style={{backgroundColor: 'rgba(199, 199, 199, 0)', borderRadius: '7px', fontSize: '1.4em', marginLeft: '5px', marginBottom: '15px'}} id=\"message\" name=\"message\" type=\"text\" placeholder=\"Message...\" onChange={(e) => onTextChange(e)}/>\n        <p/>\n        <button id=\"send\" type=\"submit\" style={{ color: 'white', boxShadow: '5px 5px 10px black', backgroundColor: '#595959', marginLeft: '45%', padding: '10px 15px', marginBottom: '35px', borderRadius: '10px'}}>Send</button>\n      </Form>\n      <p/>\n    </div>\n  )\n}\n\nexport default Chat;\n\n","/Users/sararussert/codefellows/401/testSpace/gametest/src/components/SceneVideo.js",["105","106","107"],"import React, { useState, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nconst SceneVideo = (props) => {\n  const client = props.client;\n  const [scene, setScene] = useState([]);\n\n  \n    client.on('scenario', (scenario) => {\n      setScene([{ video: scenario.video }])\n      switch(scenario.type) {\n        case 'roll':\n          // code block\n          break;\n        case 'choice2':\n          // code block\n          break;\n        case 'choice3':\n          // code block\n          break;\n        case 'choice4':\n          // code block\n          break;\n        case 'riddle':\n          // code block\n          break;\n        case 'ready':\n          // code block\n          break;\n        case 'luck':\n          // code block\n          break;\n        default:\n          // code block\n      }\n    });\n\n    \n\n  const renderSceneVideo = () => {\n    return scene.map(({ video }, index) => ( \n     <iframe autoPlay src={video} key={index} style={{ width: '1250px', height: '750px', border: 'none'}} controls></iframe>\n    ))\n  }\n\n\n\n  return (\n\n      <div id=\"video-window\" >\n        {renderSceneVideo()}\n      </div>\n\n  )\n}\n\nexport default SceneVideo;","/Users/sararussert/codefellows/401/testSpace/gametest/src/components/Dialogue.js",["108"],"import React, { useState, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n\n\nconst Dialogue = (props) => {\n  const [scene, setScene] = useState([])\n  useEffect(() => {\n    setScene([{ name: props.scenario.name, message: props.scenario.dialogue }])\n  }, [props])\n\n\n\n  const renderScene = () => {\n    return scene.map(({ name, message }, index) => (\n      <div key={index} style={{ display: 'flex', flexDirection: 'column'}}>\n        <h3 style={{ width: '400px', marginLeft: 'auto', marginRight: 'auto', fontSize: '1em', paddingTop: '35px', textAlign: 'center', fontFamily: 'fantasy'}}>\n          {name}\n        </h3>\n        <div style={{ padding: '15px 30px 0px 30px', objectFit: 'contain', fontSize: '1em', textAlign: 'left'}}>\n        {message}\n        </div>\n\n      </div>\n    ))\n  }\n\n\n\n  return (\n\n      <div id=\"dialogue-window\" style={{ backgroundImage: 'url(./images/textBox/text2.png)', backgroundSize: '100% 100%', borderRadius: '10px', fontSize: '1.7em', color: 'black', display: 'inline-block', width: '778px', minHeight: '510px', height: 'auto', border: '6px solid black', padding: '5px 10px 10px 10px'}}>\n        {renderScene()}``\n      </div>\n\n  )\n}\n\nexport default Dialogue;","/Users/sararussert/codefellows/401/testSpace/gametest/src/components/GameButtons.js",[],"/Users/sararussert/codefellows/401/testSpace/gametest/src/components/Roll.js",[],"/Users/sararussert/codefellows/401/testSpace/gametest/src/components/Choice2.js",[],["109","110"],"/Users/sararussert/codefellows/401/testSpace/gametest/src/components/Ready.js",[],"/Users/sararussert/codefellows/401/testSpace/gametest/src/components/Choice3.js",[],"/Users/sararussert/codefellows/401/testSpace/gametest/src/components/Luck.js",[],"/Users/sararussert/codefellows/401/testSpace/gametest/src/components/Choice4.js",[],"/Users/sararussert/codefellows/401/testSpace/gametest/src/components/Riddle.js",[],"/Users/sararussert/codefellows/401/testSpace/gametest/src/components/Start.js",[],{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":4,"column":8,"nodeType":"117","messageId":"118","endLine":4,"endColumn":18},{"ruleId":"115","severity":1,"message":"119","line":5,"column":8,"nodeType":"117","messageId":"118","endLine":5,"endColumn":12},{"ruleId":"115","severity":1,"message":"120","line":7,"column":8,"nodeType":"117","messageId":"118","endLine":7,"endColumn":12},{"ruleId":"115","severity":1,"message":"121","line":5,"column":8,"nodeType":"117","messageId":"118","endLine":5,"endColumn":14},{"ruleId":"122","severity":1,"message":"123","line":24,"column":32,"nodeType":"124","endLine":24,"endColumn":83},{"ruleId":"122","severity":1,"message":"123","line":25,"column":32,"nodeType":"124","endLine":25,"endColumn":84},{"ruleId":"122","severity":1,"message":"123","line":26,"column":32,"nodeType":"124","endLine":26,"endColumn":84},{"ruleId":"122","severity":1,"message":"123","line":27,"column":32,"nodeType":"124","endLine":27,"endColumn":86},{"ruleId":"122","severity":1,"message":"123","line":28,"column":32,"nodeType":"124","endLine":28,"endColumn":85},{"ruleId":"122","severity":1,"message":"123","line":29,"column":32,"nodeType":"124","endLine":29,"endColumn":86},{"ruleId":"122","severity":1,"message":"123","line":30,"column":32,"nodeType":"124","endLine":30,"endColumn":84},{"ruleId":"122","severity":1,"message":"123","line":31,"column":32,"nodeType":"124","endLine":31,"endColumn":83},{"ruleId":"115","severity":1,"message":"125","line":2,"column":10,"nodeType":"117","messageId":"118","endLine":2,"endColumn":12},{"ruleId":"115","severity":1,"message":"126","line":1,"column":27,"nodeType":"117","messageId":"118","endLine":1,"endColumn":36},{"ruleId":"115","severity":1,"message":"125","line":2,"column":10,"nodeType":"117","messageId":"118","endLine":2,"endColumn":12},{"ruleId":"127","severity":1,"message":"128","line":44,"column":6,"nodeType":"124","endLine":44,"endColumn":116},{"ruleId":"115","severity":1,"message":"125","line":2,"column":10,"nodeType":"117","messageId":"118","endLine":2,"endColumn":12},{"ruleId":"111","replacedBy":"129"},{"ruleId":"113","replacedBy":"130"},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],"no-unused-vars","'SceneVideo' is defined but never used.","Identifier","unusedVar","'Loot' is defined but never used.","'Chat' is defined but never used.","'Button' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'io' is defined but never used.","'useEffect' is defined but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.",["131"],["132"],"no-global-assign","no-unsafe-negation"]