[{"/Users/michaeleclavea/Desktop/codeFellow/code401/testSpace/gametest/src/index.js":"1","/Users/michaeleclavea/Desktop/codeFellow/code401/testSpace/gametest/src/App.js":"2","/Users/michaeleclavea/Desktop/codeFellow/code401/testSpace/gametest/src/screens/WelcomeScreen.js":"3","/Users/michaeleclavea/Desktop/codeFellow/code401/testSpace/gametest/src/screens/CreateScreen.js":"4","/Users/michaeleclavea/Desktop/codeFellow/code401/testSpace/gametest/src/screens/JoinScreen.js":"5","/Users/michaeleclavea/Desktop/codeFellow/code401/testSpace/gametest/src/screens/GameScreen.js":"6","/Users/michaeleclavea/Desktop/codeFellow/code401/testSpace/gametest/src/components/connect.js":"7","/Users/michaeleclavea/Desktop/codeFellow/code401/testSpace/gametest/src/components/SceneVideo.js":"8","/Users/michaeleclavea/Desktop/codeFellow/code401/testSpace/gametest/src/components/Loot.js":"9","/Users/michaeleclavea/Desktop/codeFellow/code401/testSpace/gametest/src/components/Dialogue.js":"10","/Users/michaeleclavea/Desktop/codeFellow/code401/testSpace/gametest/src/components/Chat.js":"11","/Users/michaeleclavea/Desktop/codeFellow/code401/testSpace/gametest/src/components/GameButtons.js":"12","/Users/michaeleclavea/Desktop/codeFellow/code401/testSpace/gametest/src/components/Roll.js":"13","/Users/michaeleclavea/Desktop/codeFellow/code401/testSpace/gametest/src/components/Choice4.js":"14","/Users/michaeleclavea/Desktop/codeFellow/code401/testSpace/gametest/src/components/Choice2.js":"15","/Users/michaeleclavea/Desktop/codeFellow/code401/testSpace/gametest/src/components/Choice3.js":"16","/Users/michaeleclavea/Desktop/codeFellow/code401/testSpace/gametest/src/components/Luck.js":"17","/Users/michaeleclavea/Desktop/codeFellow/code401/testSpace/gametest/src/components/Ready.js":"18","/Users/michaeleclavea/Desktop/codeFellow/code401/testSpace/gametest/src/components/Riddle.js":"19"},{"size":222,"mtime":1608190685035,"results":"20","hashOfConfig":"21"},{"size":674,"mtime":1608246843855,"results":"22","hashOfConfig":"21"},{"size":1545,"mtime":1608316237197,"results":"23","hashOfConfig":"21"},{"size":7081,"mtime":1608318932170,"results":"24","hashOfConfig":"21"},{"size":7006,"mtime":1608324579005,"results":"25","hashOfConfig":"21"},{"size":2060,"mtime":1608316237196,"results":"26","hashOfConfig":"21"},{"size":199,"mtime":1608245954533,"results":"27","hashOfConfig":"21"},{"size":1214,"mtime":1608245954532,"results":"28","hashOfConfig":"21"},{"size":1588,"mtime":1608245954532,"results":"29","hashOfConfig":"21"},{"size":1412,"mtime":1608316237194,"results":"30","hashOfConfig":"21"},{"size":2923,"mtime":1608316237193,"results":"31","hashOfConfig":"21"},{"size":1122,"mtime":1608316237195,"results":"32","hashOfConfig":"21"},{"size":470,"mtime":1608316237196,"results":"33","hashOfConfig":"21"},{"size":764,"mtime":1608316237194,"results":"34","hashOfConfig":"21"},{"size":577,"mtime":1608316237194,"results":"35","hashOfConfig":"21"},{"size":649,"mtime":1608316237194,"results":"36","hashOfConfig":"21"},{"size":549,"mtime":1608316237195,"results":"37","hashOfConfig":"21"},{"size":396,"mtime":1608316237195,"results":"38","hashOfConfig":"21"},{"size":460,"mtime":1608316237195,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"110ay80",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"/Users/michaeleclavea/Desktop/codeFellow/code401/testSpace/gametest/src/index.js",[],["84","85"],"/Users/michaeleclavea/Desktop/codeFellow/code401/testSpace/gametest/src/App.js",[],"/Users/michaeleclavea/Desktop/codeFellow/code401/testSpace/gametest/src/screens/WelcomeScreen.js",[],"/Users/michaeleclavea/Desktop/codeFellow/code401/testSpace/gametest/src/screens/CreateScreen.js",[],"/Users/michaeleclavea/Desktop/codeFellow/code401/testSpace/gametest/src/screens/JoinScreen.js",["86"],"/Users/michaeleclavea/Desktop/codeFellow/code401/testSpace/gametest/src/screens/GameScreen.js",["87","88","89"],"\nimport '../App.css';\nimport React, {useState, useEffect} from 'react';\nimport SceneVideo from '../components/SceneVideo.js';\nimport Loot from '../components/Loot.js';\nimport Dialogue from '../components/Dialogue.js';\nimport Chat from '../components/Chat.js';\nimport client from '../components/connect.js';\nimport GameButtons from '../components/GameButtons';\n\nlet count = 0; \nlet sceneCount = 0;\n\nfunction GameScreen() {\n  const welcome = <h1 style={{ color: 'gray'}}>Click next to start the game!</h1>\n  const [scene, setScene] = useState(welcome);\n  const [scenarioState, setScenarioState] = useState({})\n\n  useEffect(() => {\n    client.on('scenario', (scenario) => {\n      setScene([{ video: scenario.video }])\n      setScenarioState(scenario);\n    });\n    client.on('result', result => {\n      result.type = 'ready';\n      setScenarioState(result);\n    })\n    \n  })\n\n  function emitReady(){\n    sceneCount++;\n    client.emit('ready', sceneCount);\n    alert('ready');\n  }\n\n  // refactor passing client as props. Call it as an import\n  // import client from '../components/connect.js';\n\n  return (\n    <>\n      <div style={{  display: 'block', textAlign: 'center'}}>\n        <div id='sceneWindow' style={{ display: 'inline-block', backgroundColor: 'black', width: '1250px', height: 'auto', margin: 'auto'}}>\n          <SceneVideo client={client}/>\n        </div>\n        <div style={{ display: 'inline-block', paddingLeft: '20px'}}>\n          <Loot />\n        </div>\n      </div>\n      <GameButtons scenario={scenarioState} />\n      {/* <button  onClick={emitReady} style={{ display: 'block', margin: 'auto', marginTop: '10px'}} name=\"ready\">Next Scene</button> */}\n      <section style={{ display: 'grid', gridTemplateRows: '1fr', gridTemplateColumns: '1fr 1fr', margin: 'auto'}}>\n        <div style={{ textAlign: 'right'}}>\n          <Dialogue client={client}/>\n        </div>\n        <div style={{ marginLeft: '0', paddingLeft: '50px'}}>\n          <Chat client={client}/>\n        </div>\n      </section>\n      \n    </>\n  );\n}\n\nexport default GameScreen;\n","/Users/michaeleclavea/Desktop/codeFellow/code401/testSpace/gametest/src/components/connect.js",[],"/Users/michaeleclavea/Desktop/codeFellow/code401/testSpace/gametest/src/components/SceneVideo.js",["90","91","92"],"import React, { useState, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nconst SceneVideo = (props) => {\n  const client = props.client;\n  const [scene, setScene] = useState([]);\n\n  \n    client.on('scenario', (scenario) => {\n      setScene([{ video: scenario.video }])\n      switch(scenario.type) {\n        case 'roll':\n          // code block\n          break;\n        case 'choice2':\n          // code block\n          break;\n        case 'choice3':\n          // code block\n          break;\n        case 'choice4':\n          // code block\n          break;\n        case 'riddle':\n          // code block\n          break;\n        case 'ready':\n          // code block\n          break;\n        case 'luck':\n          // code block\n          break;\n        default:\n          // code block\n      }\n    });\n\n    \n\n  const renderSceneVideo = () => {\n    return scene.map(({ video }, index) => ( \n     <iframe autoPlay src={video} key={index} style={{ width: '1250px', height: '750px', border: 'none'}} controls></iframe>\n    ))\n  }\n\n\n\n  return (\n\n      <div id=\"video-window\" >\n        {renderSceneVideo()}\n      </div>\n\n  )\n}\n\nexport default SceneVideo;","/Users/michaeleclavea/Desktop/codeFellow/code401/testSpace/gametest/src/components/Loot.js",["93","94","95","96","97","98","99","100"],"import React from 'react';\n\n\n\nfunction Loot(){\n\n    const styleLoot = {\n        borderRadius: '7px', \n        display: 'flex', \n        alignItems: 'center', \n        justifyContent: 'center'\n    }\n\n    const styleImg = {\n        height: '80px',\n        width: 'auto' \n    }\n\n\n\n    return(\n        <div id='loot-container' style={{display: 'inline-block', float: 'right'}}>\n        <section style={{ backgroundImage: 'url(./images/Loot.png)', backgroundSize: '100% 100%', padding: '2px 20px 2px 20px', height: '500px', width: '250px', margin: 'auto', backgroundRepeat: 'no-repeat', borderRadius: '7px', display: 'grid', gridTemplateColumns: '1fr 1fr', gridTemplateRows: '1fr 1fr 1fr 1fr', border: '1px solid black', backgroundColor: 'gray'}}>\n        <div style={styleLoot}><img style={styleImg} src='./images/icons/axe.png'></img></div>\n        <div style={styleLoot}><img style={styleImg} src='./images/icons/book.png'></img></div>\n        <div style={styleLoot}><img style={styleImg} src='./images/icons/gold.png'></img></div>\n        <div style={styleLoot}><img style={styleImg} src='./images/icons/potion.png'></img></div>\n        <div style={styleLoot}><img style={styleImg} src='./images/icons/sword.png'></img></div>\n        <div style={styleLoot}><img style={styleImg} src='./images/icons/dagger.png'></img></div>\n        <div style={styleLoot}><img style={styleImg} src='./images/icons/club.png'></img></div>\n        <div style={styleLoot}><img style={styleImg} src='./images/icons/bow.png'></img></div>        \n        </section>\n        </div>\n    )\n}\n\nexport default Loot;\n\n\n","/Users/michaeleclavea/Desktop/codeFellow/code401/testSpace/gametest/src/components/Dialogue.js",["101","102"],"import React, { useState, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n\n\nconst Dialogue = (props) => {\n  const client = props.client;\n  const [scene, setScene] = useState([]);\n\n  \n    client.on('scenario', (scenario) => {\n      setScene([{ name: scenario.name, message: scenario.dialogue }])\n    });\n    client.on('result', result => {\n      setScene([{ name: result.name, message: result.dialogue }])\n    });\n\n\n\n    \n\n  const renderScene = () => {\n    return scene.map(({ name, message }, index) => (\n      <div key={index} style={{ display: 'flex', flexDirection: 'column'}}>\n        <h3 style={{ width: '400px', marginLeft: 'auto', marginRight: 'auto', fontSize: '1em', paddingTop: '35px', textAlign: 'center', fontFamily: 'fantasy'}}>\n          {name}\n        </h3>\n        <div style={{ padding: '15px 30px 0px 30px', objectFit: 'contain', fontSize: '1em', textAlign: 'left'}}>\n        {message}\n        </div>\n\n      </div>\n    ))\n  }\n\n\n\n  return (\n\n      <div id=\"dialogue-window\" style={{ backgroundImage: 'url(./images/textBox/text2.png)', backgroundSize: '100% 100%', borderRadius: '10px', fontSize: '1.7em', color: 'black', display: 'inline-block', width: '778px', minHeight: '510px', height: 'auto', border: '6px solid black', padding: '5px 10px 10px 10px'}}>\n        {renderScene()}``\n      </div>\n\n  )\n}\n\nexport default Dialogue;","/Users/michaeleclavea/Desktop/codeFellow/code401/testSpace/gametest/src/components/Chat.js",["103"],"import React, { useState, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Form from 'react-bootstrap/Form'\n\n\n\n\nconst Chat = (props) => {\n  const client = props.client;\n  const [state, setState] = useState({message: '', name: ''});\n  const [chat, setChat] = useState([]);\n\n\n  useEffect(() => {\n    client.on('chat', ({name, message}) => {\n      setChat([...chat, { name, message }])\n    })\n    \n    // client.on('result', payload => {\n    //   setChat([...payload, { name: payload.name, message: payload.dialogue }])\n    //   // do ready check, serve payload.num\n    // })\n  })\n\n  const onTextChange = e => {\n    setState({...state, [e.target.name]: e.target.value})\n  }\n\n  const onMessageSubmit = (e) => {\n    e.preventDefault();\n    const { message, name } = state;\n    console.log(name, message);\n    client.emit('chat', {name, message});\n    setState({ message: '', name });\n  }\n\n  const renderChat = () => {\n    return chat.map(({ name, message }, index) => (\n      <div key={index}>\n        <h3 style={{fontSize: '1.6em'}}>\n        <strong>{name}:</strong> <span>{message}</span>\n        </h3>\n        <p style={{fontSize: '10px'}}>_____________________________________</p>\n      </div>\n    ))\n  }\n\n  return (\n    <div id=\"mario-chat\" style={{backgroundImage: 'url(./images/scrolly.png)', backgroundAttachment: 'scroll', backgroundRepeat: 'no-repeat', backgroundSize: 'cover', width: '550px', marginRight: '0'}} >\n      <h2 style={{ fontSize: '2em', width: '300px', paddingLeft: '35px', paddingTop: '100px', margin: 'auto', textDecoration: 'underline', fontFamily: 'fantasy'}}><strong>Kingdom chat</strong></h2>\n      <div id=\"chat-window\" style={{ paddingTop: '5px', width: '520px', minHeight: '260px', height: 'auto', padding: '30px 0 30px 30px'}}>\n        {renderChat()}\n      </div>\n      <Form onSubmit={onMessageSubmit}>\n      <Form.Label style={{ fontSize: '1.4em', paddingLeft: '50px'}}><strong>Player Name:</strong></Form.Label>\n        <input style={{backgroundColor: 'rgba(199, 199, 199, 0)', borderRadius: '7px', fontSize: '1.4em', marginLeft: '5px'}} size=\"lg\" id=\"name\" name=\"name\" type=\"text\" placeholder=\"Name...\" onChange={(e) => onTextChange(e)}/>\n        <p />\n        <Form.Label style={{ fontSize: '1.4em', paddingLeft: '50px'}}><strong>Type Message:</strong></Form.Label>\n        <input style={{backgroundColor: 'rgba(199, 199, 199, 0)', borderRadius: '7px', fontSize: '1.4em', marginLeft: '5px', marginBottom: '15px'}} id=\"message\" name=\"message\" type=\"text\" placeholder=\"Message...\" onChange={(e) => onTextChange(e)}/>\n        <p/>\n        <button id=\"send\" type=\"submit\" style={{ color: 'white', boxShadow: '5px 5px 10px black', backgroundColor: '#595959', marginLeft: '45%', padding: '10px 15px', marginBottom: '35px', borderRadius: '10px'}}>Send</button>\n      </Form>\n      <p/>\n    </div>\n  )\n}\n\nexport default Chat;\n\n","/Users/michaeleclavea/Desktop/codeFellow/code401/testSpace/gametest/src/components/GameButtons.js",[],"/Users/michaeleclavea/Desktop/codeFellow/code401/testSpace/gametest/src/components/Roll.js",[],"/Users/michaeleclavea/Desktop/codeFellow/code401/testSpace/gametest/src/components/Choice4.js",[],"/Users/michaeleclavea/Desktop/codeFellow/code401/testSpace/gametest/src/components/Choice2.js",[],"/Users/michaeleclavea/Desktop/codeFellow/code401/testSpace/gametest/src/components/Choice3.js",[],"/Users/michaeleclavea/Desktop/codeFellow/code401/testSpace/gametest/src/components/Luck.js",[],"/Users/michaeleclavea/Desktop/codeFellow/code401/testSpace/gametest/src/components/Ready.js",[],"/Users/michaeleclavea/Desktop/codeFellow/code401/testSpace/gametest/src/components/Riddle.js",[],{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":5,"column":8,"nodeType":"110","messageId":"111","endLine":5,"endColumn":14},{"ruleId":"108","severity":1,"message":"112","line":11,"column":5,"nodeType":"110","messageId":"111","endLine":11,"endColumn":10},{"ruleId":"108","severity":1,"message":"113","line":16,"column":10,"nodeType":"110","messageId":"111","endLine":16,"endColumn":15},{"ruleId":"108","severity":1,"message":"114","line":31,"column":12,"nodeType":"110","messageId":"111","endLine":31,"endColumn":21},{"ruleId":"108","severity":1,"message":"115","line":1,"column":27,"nodeType":"110","messageId":"111","endLine":1,"endColumn":36},{"ruleId":"108","severity":1,"message":"116","line":2,"column":10,"nodeType":"110","messageId":"111","endLine":2,"endColumn":12},{"ruleId":"117","severity":1,"message":"118","line":44,"column":6,"nodeType":"119","endLine":44,"endColumn":116},{"ruleId":"120","severity":1,"message":"121","line":24,"column":32,"nodeType":"119","endLine":24,"endColumn":83},{"ruleId":"120","severity":1,"message":"121","line":25,"column":32,"nodeType":"119","endLine":25,"endColumn":84},{"ruleId":"120","severity":1,"message":"121","line":26,"column":32,"nodeType":"119","endLine":26,"endColumn":84},{"ruleId":"120","severity":1,"message":"121","line":27,"column":32,"nodeType":"119","endLine":27,"endColumn":86},{"ruleId":"120","severity":1,"message":"121","line":28,"column":32,"nodeType":"119","endLine":28,"endColumn":85},{"ruleId":"120","severity":1,"message":"121","line":29,"column":32,"nodeType":"119","endLine":29,"endColumn":86},{"ruleId":"120","severity":1,"message":"121","line":30,"column":32,"nodeType":"119","endLine":30,"endColumn":84},{"ruleId":"120","severity":1,"message":"121","line":31,"column":32,"nodeType":"119","endLine":31,"endColumn":83},{"ruleId":"108","severity":1,"message":"115","line":1,"column":27,"nodeType":"110","messageId":"111","endLine":1,"endColumn":36},{"ruleId":"108","severity":1,"message":"116","line":2,"column":10,"nodeType":"110","messageId":"111","endLine":2,"endColumn":12},{"ruleId":"108","severity":1,"message":"116","line":2,"column":10,"nodeType":"110","messageId":"111","endLine":2,"endColumn":12},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'count' is assigned a value but never used.","'scene' is assigned a value but never used.","'emitReady' is defined but never used.","'useEffect' is defined but never used.","'io' is defined but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]